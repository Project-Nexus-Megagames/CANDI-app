[{"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\index.js":"1","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\App.js":"2","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\reportWebVitals.js":"3","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\store.js":"4","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\initUpdate.js":"5","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\socket.js":"6","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\configureStore.js":"7","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\entities\\characters.js":"8","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\entities\\gamestate.js":"9","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\entities\\assets.js":"10","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\entities\\playerActions.js":"11","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\config.js":"12","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\reducer.js":"13","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\api.js":"14","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\middleware\\toast.js":"15","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\middleware\\api.js":"16","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\entities\\auth.js":"17","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Actions\\Actions.jsx":"18","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Control\\ControlTerminal.jsx":"19","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\navigationBar.jsx":"20","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\Login.jsx":"21","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Control\\control.jsx":"22","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\MyCharacters\\myCharacter.jsx":"23","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\OtherCharacters\\OtherCharacters.jsx":"24","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Actions\\NewAction.jsx":"25","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Actions\\ActionList.jsx":"26","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Actions\\SelectedAction.jsx":"27","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Actions\\SelectedProject.jsx":"28","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\loading.jsx":"29","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\OtherCharacters\\ModifyCharacter.jsx":"30","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\OtherCharacters\\AddAsset.jsx":"31","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\NoCharacter.jsx":"32","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\ImgPanel.jsx":"33","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\NavigationBar.jsx":"34","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\navigation\\Map.jsx":"35","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\Map.jsx":"36","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\Test.jsx":"37","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\entities\\locations.js":"38","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\homepage.jsx":"39","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\HomePage.jsx":"40","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\notFound.jsx":"41","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\NotFound.jsx":"42"},{"size":714,"mtime":1617911040854,"results":"43","hashOfConfig":"44"},{"size":4570,"mtime":1619064143868,"results":"45","hashOfConfig":"44"},{"size":375,"mtime":1617911040854,"results":"46","hashOfConfig":"44"},{"size":151,"mtime":1617911040854,"results":"47","hashOfConfig":"44"},{"size":3688,"mtime":1617911638061,"results":"48","hashOfConfig":"44"},{"size":537,"mtime":1617911638062,"results":"49","hashOfConfig":"44"},{"size":509,"mtime":1617911040854,"results":"50","hashOfConfig":"44"},{"size":2525,"mtime":1617911638060,"results":"51","hashOfConfig":"44"},{"size":1952,"mtime":1617911638061,"results":"52","hashOfConfig":"44"},{"size":2839,"mtime":1619504576501,"results":"53","hashOfConfig":"44"},{"size":4288,"mtime":1618121022610,"results":"54","hashOfConfig":"44"},{"size":200,"mtime":1619676810799,"results":"55","hashOfConfig":"44"},{"size":535,"mtime":1618948823495,"results":"56","hashOfConfig":"44"},{"size":238,"mtime":1617911040854,"results":"57","hashOfConfig":"44"},{"size":183,"mtime":1617911040854,"results":"58","hashOfConfig":"44"},{"size":1018,"mtime":1617911040854,"results":"59","hashOfConfig":"44"},{"size":2612,"mtime":1617911638060,"results":"60","hashOfConfig":"44"},{"size":4154,"mtime":1619501178851,"results":"61","hashOfConfig":"44"},{"size":14923,"mtime":1619132845467,"results":"62","hashOfConfig":"44"},{"size":2313,"mtime":1619063852906,"results":"63","hashOfConfig":"44"},{"size":3070,"mtime":1617911638057,"results":"64","hashOfConfig":"44"},{"size":5556,"mtime":1617911638050,"results":"65","hashOfConfig":"44"},{"size":15809,"mtime":1619666529111,"results":"66","hashOfConfig":"44"},{"size":10186,"mtime":1619473841273,"results":"67","hashOfConfig":"44"},{"size":5322,"mtime":1618121665140,"results":"68","hashOfConfig":"44"},{"size":2803,"mtime":1617911638047,"results":"69","hashOfConfig":"44"},{"size":13727,"mtime":1619508470375,"results":"70","hashOfConfig":"44"},{"size":5721,"mtime":1618165465489,"results":"71","hashOfConfig":"44"},{"size":12856,"mtime":1619420839009,"results":"72","hashOfConfig":"44"},{"size":4782,"mtime":1619126923192,"results":"73","hashOfConfig":"44"},{"size":3783,"mtime":1619472786831,"results":"74","hashOfConfig":"44"},{"size":4503,"mtime":1617911638053,"results":"75","hashOfConfig":"44"},{"size":804,"mtime":1619664111250,"results":"76","hashOfConfig":"44"},{"size":2339,"mtime":1619132281015,"results":"77","hashOfConfig":"44"},{"size":431,"mtime":1617912724084,"results":"78","hashOfConfig":"44"},{"size":149092,"mtime":1619063847146,"results":"79","hashOfConfig":"44"},{"size":3110,"mtime":1619064726787,"results":"80","hashOfConfig":"44"},{"size":2484,"mtime":1618948805920,"results":"81","hashOfConfig":"44"},{"size":4790,"mtime":1619063754674,"results":"82","hashOfConfig":"44"},{"size":5234,"mtime":1619665829697,"results":"83","hashOfConfig":"44"},{"size":1470,"mtime":1619063808222,"results":"84","hashOfConfig":"44"},{"size":1470,"mtime":1619063808222,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1k1l37l",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"88"},"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\index.js",[],["181","182"],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\App.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\reportWebVitals.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\store.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\initUpdate.js",["183"],"import { assetAdded, assetDeleted, assetUpdated } from './entities/assets';\r\nimport { characterAdded, characterDeleted, characterUpdated } from './entities/characters';\r\nimport { gamestateReceived } from './entities/gamestate';\r\nimport { playerActionsReceived, playerActionUpdated, actionAdded, actionDeleted } from './entities/playerActions';\r\nimport socket from '../socket'\r\nimport store from './store';\r\n\r\nconst initUpdates = () => {\r\n    socket.on('updateClients', (data) => { \r\n        console.log('updateClients');\r\n        for (const el of data) {\r\n            switch(el.model) {\r\n                case 'Character':\r\n                    store.dispatch(characterUpdated(el));\r\n                    break;\r\n                case 'Action':\r\n                    store.dispatch(playerActionUpdated(el));\r\n                    break;\r\n                case 'Gamestate':\r\n                    store.dispatch(gamestateReceived(el));\r\n                    break;\r\n                case 'Asset':\r\n                    store.dispatch(assetUpdated(el));\r\n                    break;\r\n                default:\r\n                    console.log(`Unable to update Redux for ${el.model}: ${el._id}`);\r\n                    break;\r\n            }\r\n        }\r\n    });\r\n\r\n    socket.on('createClients', (data) => { \r\n        console.log('createClients');\r\n        for (const el of data) {\r\n            switch(el.model) {\r\n                case 'Character':\r\n                    store.dispatch(characterAdded(el));\r\n                    break;\r\n                case 'Action':\r\n                    store.dispatch(actionAdded(el));\r\n                    break;\r\n                case 'Gamestate':\r\n                    console.log('DEAR GOD IF YOU SEE THIS FUCKING CALL SCOTT OH GOD HOW COULD THIS HAPPEN')\r\n                    break;\r\n                case 'Asset':\r\n                    store.dispatch(assetAdded(el));\r\n                    break;\r\n                default:\r\n                    console.log(`Unable to add Redux for ${el.model}: ${el._id}`);\r\n                    break;\r\n            }\r\n        }\r\n    });\r\n\r\n    socket.on('deleteClients', (data) => { \r\n        console.log('deleteClients');\r\n        for (const el of data) {\r\n            switch(el.type) {\r\n                case 'character':\r\n                    store.dispatch(characterDeleted(el));\r\n                    break;\r\n                case 'action':\r\n                    store.dispatch(actionDeleted(el));\r\n                    break;\r\n                case 'Gamestate':\r\n                    console.log('DEAR GOD IF YOU SEE THIS FUCKING CALL SCOTT OH GOD HOW COULD THIS HAPPEN')\r\n                    break;\r\n                case 'asset':\r\n                    store.dispatch(assetDeleted(el));\r\n                    break;\r\n                default:\r\n                    console.log(`Unable to add Redux for ${el.type}: ${el.id}`);\r\n                    break;\r\n            }\r\n        }\r\n    });\r\n\r\n/*\tsocket.on('updateCharacters', (data) => { store.dispatch(charactersReceived(data)) });\r\n\tsocket.on('updateCharacter', (data) => { store.dispatch(characterUpdated(data)) });\r\n\r\n\r\n    socket.on('updateActions', (data) => { store.dispatch(playerActionsReceived(data)) });\r\n    socket.on('updateAction', (data) => { store.dispatch(playerActionUpdated(data)) });\r\n    socket.on('actionCreated', (data) => { store.dispatch(actionAdded(data)) });\r\n    socket.on('actionDeleted', (data) => { store.dispatch(actionDeleted(data)) });\r\n    \r\n    socket.on('updateGamestate', (data) => { store.dispatch(gamestateReceived(data)) });\r\n    socket.on('updateAssets', (data) => { store.dispatch(assetsReceived(data)) });\r\n    */\r\n}\r\n\r\n\r\n\r\nexport default initUpdates;","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\socket.js",["184"],"import { io } from \"socket.io-client\";\r\nimport { gameServer } from './config';\r\nimport store from \"./redux/store\";\r\n\r\nconst URL = gameServer;\r\nconst socket = io(URL, { autoConnect: false });\r\n\r\n// DEBUG event showing any event thrown over the socket in console\r\nsocket.onAny((event, ...args) => {\r\n  console.log(event, args);\r\n});\r\n\r\nexport function initConnection(user) {\r\n  console.log('Socket Connecting....')\r\n  socket.auth = { username: user.username }\r\n    \r\n  console.log(socket);\r\n  socket.connect();\r\n}\r\n\r\nexport default socket;","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\configureStore.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\entities\\characters.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\entities\\gamestate.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\entities\\assets.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\entities\\playerActions.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\config.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\reducer.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\api.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\middleware\\toast.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\middleware\\api.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\entities\\auth.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Actions\\Actions.jsx",["185"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Container, Sidebar, Input, Panel, PanelGroup, Button, Loader, Header, Content } from 'rsuite';\r\nimport { getMyCharacter } from '../../redux/entities/characters';\r\nimport { setFilter } from '../../redux/entities/playerActions';\r\nimport NavigationBar from '../Navigation/NavigationBar';\r\n\r\nimport ActionList from './ActionList';\r\nimport NewAction from './NewAction';\r\nimport SelectedAction from './SelectedAction';\r\nimport SelectedProject from './SelectedProject';\r\nclass Actions extends Component {\r\n\tstate = { \r\n\t\tselected: null,\r\n\t\tshowNew: false,\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({ selected: null });\r\n\t}\r\n\r\n\tcomponentDidUpdate = (prevProps) => {\r\n\t\tif (this.props.actions !== prevProps.actions) {\r\n\t\t\tif (this.state.selected) {\r\n\t\t\t\tconst selected = this.props.actions.find(el => el._id === this.state.selected._id)\r\n\t\t\t\tthis.setState({ selected })\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tshowNew = () => { \r\n\t\tthis.setState({showNew: true}) \r\n\t};\r\n\r\n\tcloseNew = () => { \r\n\t\tthis.setState({showNew: false}) \r\n\t};\r\n\r\n\thandleSelect = (fuuuck) => {\r\n\t\tthis.setState({ selected: fuuuck })\r\n\t}\r\n\r\n\tfilter = (fil) => {\r\n\t\tconst filtered = this.props.actions.filter(action => action.description.toLowerCase().includes(fil.toLowerCase()) || \r\n\t\taction.intent.toLowerCase().includes(fil.toLowerCase()) || \r\n\t\taction.creator.characterName.toLowerCase().includes(fil.toLowerCase())\r\n\t\t);\r\n\t\tthis.setState({ filtered });\r\n\t}\r\n\r\n\trender() { \r\n\t\tif (!this.props.login) {\r\n\t\t\tthis.props.history.push('/');\r\n\t\t\treturn (<Loader inverse center content=\"doot...\" />)\r\n\t\t};\r\n\t\treturn ( \r\n\t\t\t<React.Fragment>\r\n\t\t\t<NavigationBar/>\r\n\t\t\t<Container>\r\n\t\t\t<Sidebar style={{backgroundColor: \"black\", height: '94vh'}}>\r\n\t\t\t\t<PanelGroup>\t\t\t\t\t\r\n\t\t\t\t\t<Panel style={{ height: 'calc(8vh)', backgroundColor: \"#000101\"}}>\r\n\t\t\t\t\t\t<Input onChange={(value)=> this.props.setFilter(value)} value={this.props.filter} placeholder=\"Search\"></Input>\r\n\t\t\t\t\t</Panel>\r\n\t\t\t\t\t<Panel bodyFill style={{height: 'calc(78vh)', scrollbarWidth: 'none', overflow: 'auto', borderRadius: '0px', borderRight: '1px solid rgba(255, 255, 255, 0.12)' }}>\t\r\n\t\t\t\t\t\t<ActionList selected={this.state.selected} handleSelect={this.handleSelect}/>\r\n\t\t\t\t\t</Panel>\r\n\t\t\t\t\t<Panel style={{ paddingTop: '0px', borderRight: '1px solid rgba(255, 255, 255, 0.12)', borderRadius: '0px', backgroundColor: \"#000101\"}}>\r\n\t\t\t\t\t\t<Button appearance='primary' disabled={this.isDisabled()} block onClick={() => this.showNew()}>New Action</Button>\r\n\t\t\t\t\t</Panel>\t\t\t\r\n\t\t\t\t</PanelGroup>\r\n\t\t\t</Sidebar>\r\n\t\t\t<Content>\r\n\t\t\t\t{this.state.selected && this.state.selected.model === 'Action' && <SelectedAction user={this.props.user} handleSelect={this.handleSelect} assets={[...this.props.myCharacter.assets, ...this.props.myCharacter.lentAssets ]} action={this.state.selected}/>}\t\r\n\t\t\t\t{this.state.selected && this.state.selected.model === 'Project' && <SelectedProject characters={this.props.characters} user={this.props.user} handleSelect={this.handleSelect} project={this.state.selected}/>}\t\r\n\t\t\t</Content>\r\n\t\t\t<NewAction\r\n\t\t\t\tshow={this.state.showNew}\r\n\t\t\t\tassets={this.filteredAssets()}\r\n\t\t\t\tshowNew={this.showNew} \r\n\t\t\t\tcloseNew={this.closeNew}\r\n\t\t\t\tgamestate={this.props.gamestate}\r\n\t\t\t\tmyCharacter={this.props.myCharacter}\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n\r\n\tfilteredAssets = () => {\r\n\t\tlet assets = [...this.props.myCharacter.assets, ...this.props.myCharacter.lentAssets];\r\n\t\tassets = assets.filter(el => el.status.used === false);\r\n\r\n\t\treturn assets;\r\n\t}\r\n\r\n\tisDisabled () {\r\n\t\tif (this.props.gamestate.status === 'Active') return false;\r\n\t\telse return true;\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tactions: state.actions.list,\r\n\tuser: state.auth.user,\r\n\tcontrol: state.auth.control,\r\n\tfilter: state.actions.filter,\r\n\tlogin: state.auth.login,\r\n\tgamestate: state.gamestate,\r\n\tmyCharacter: state.auth.user ? getMyCharacter(state): undefined\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tsetFilter: (data) => dispatch(setFilter(data))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Actions);\r\n","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Control\\ControlTerminal.jsx",["186"],"import React, { Component } from 'react';\r\nimport { ButtonGroup, Content, InputNumber, InputPicker, Divider, Placeholder, Panel, Button, Icon, Modal, Form, FormGroup, FormControl, ControlLabel, FlexboxGrid, SelectPicker, TagPicker, DatePicker, Loader, Table } from 'rsuite';\r\nimport { connect } from 'react-redux';\r\nimport socket from '../../socket';\r\nimport { getMyCharacter } from '../../redux/entities/characters';\r\nimport { draftActions } from '../../redux/entities/playerActions';\r\nimport NavigationBar from '../Navigation/NavigationBar';\r\n\r\nconst { Column, HeaderCell, Cell } = Table;\r\nclass ControlTerminal extends Component {\r\n\tstate = { \r\n\t\tgsModal: false,\r\n\t\twarningModal: false,\r\n\t\twarning2Modal: false,\r\n\t\tassModal: false,\r\n\t\tprojectModal: false,\r\n\t\tformValue: {\r\n\t\t\tround: null,\r\n\t\t\tstatus: '',\r\n\t\t},\r\n\t\tendTime: null,\r\n\t\tprojName: '',\r\n\t\tprojDescription: '',\r\n\t\tprogress: 0,\r\n\t\tplayers: [],\r\n\t\timage: '',\r\n\r\n\t\tcharacters: [],\r\n\t\r\n\t\tdrafts: 0,\r\n\t\tawaiting: 0,\r\n\t\tready: 0,\r\n\t\tassets: [],\r\n\t\tselected: null,\r\n\t\tname: '',\r\n\t\tdescription: '',\r\n\t\tuses: 0, \r\n\t\tloading: false,\r\n\r\n\t\ttableData: []\r\n\t }\r\n\r\n\tcomponentDidMount = async () => {\r\n\t\tconst formValue = {\r\n\t\t\tround: this.props.gamestate.round, \r\n\t\t\tstatus: this.props.gamestate.status,\r\n\t\t\tendTime: this.props.gamestate.endTime\r\n\t\t}\r\n\t\tconst copy = this.props.actions.filter(action => action.round === this.props.gamestate.round);\r\n\t\tawait this.compileTable(copy);\r\n\r\n\t\tlet drafts = 0;\r\n\t\tlet awaiting= 0;\r\n\t\tlet ready = 0;\r\n\t\tfor (const action of this.props.actions) {\r\n\t\t\tswitch (action.status) {\r\n\t\t\t\tcase \"Draft\":\r\n\t\t\t\t\tdrafts++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Ready\":\r\n\t\t\t\t\tready++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"Awaiting\":\r\n\t\t\t\t\tawaiting++;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.setState({ formValue, drafts, awaiting, ready, characters: {...this.props.characters} })\r\n\t}\r\n\r\n\tcomponentDidUpdate = async (prevProps) => {\r\n\t\tif (this.props.gamestate !== prevProps.gamestate || this.props.actions !== prevProps.actions) {\r\n\t\t\tconst formValue = {\r\n\t\t\t\tround: this.props.gamestate.round, \r\n\t\t\t\tstatus: this.props.gamestate.status\r\n\t\t\t}\r\n\t\t\tlet drafts = 0;\r\n\t\t\tlet awaiting= 0;\r\n\t\t\tlet ready = 0;\r\n\t\t\tconst copy = this.props.actions.filter(action => action.round === this.props.gamestate.round);\r\n\t\t\tawait this.compileTable(copy);\r\n\r\n\t\t\tfor (const action of copy) {\r\n\t\t\t\tswitch (action.status) {\r\n\t\t\t\t\tcase \"Draft\":\r\n\t\t\t\t\t\tdrafts++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Ready\":\r\n\t\t\t\t\t\tready++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Awaiting\":\r\n\t\t\t\t\t\tawaiting++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.setState({ formValue, drafts, awaiting, ready, endTime: this.props.gamestate.endTime })\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\tcompileTable = async (actions) => {\r\n\t\tlet tableData = []\r\n\t\tfor (const action of actions) {\r\n\t\t\tconst data = {\r\n\t\t\t\tcontrol: action.creator.control,\r\n\t\t\t\tcharacter: action.creator.characterName,\r\n\t\t\t\tdescription: action.description,\r\n\t\t\t\tstatus: action.status,\r\n\t\t\t\tdieResult: action.dieResult,\r\n\t\t\t\tcontrolAssigned: action.controlAssigned,\r\n\t\t\t\tnews: action.newsworthy,\r\n\t\t\t}\r\n\t\t\ttableData.push(data);\r\n\t\t}\r\n\t\tthis.setState({ tableData })\r\n\t}\r\n\r\n\trender() { \r\n\t\tif (!this.props.login) {\r\n\t\t\tthis.props.history.push('/');\r\n\t\t\treturn (<Loader inverse center content=\"doot...\" />)\r\n\t\t};\r\n\t\treturn ( \r\n\t\t\t<Content style={{style1}}>\r\n\t\t\t\t<NavigationBar />\r\n\t\t\t\t<div style={{height: '10vh'}} >\r\n\t\t\t\t\t<Divider>Scott's Message of the Day:</Divider>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h5>Welcome, to J̶u̶r̶a̶s̶s̶i̶c̶ ̶P̶a̶r̶k̶  Dusk City</h5>\r\n\t\t\t\t\t</div>\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{height: '15vh'}}>\r\n\t\t\t\t<FlexboxGrid>\r\n\t\t\t\t\t<FlexboxGrid.Item colspan={8}>\r\n\t\t\t\t\t\t<Panel bordered style={{backgroundColor: '#272b34'}} header='Drafts'> {this.state.drafts} </Panel>\r\n\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t<FlexboxGrid.Item colspan={8}>\r\n\t\t\t\t\t\t<Panel bordered style={{backgroundColor: '#272b34'}} header='Awaiting Resolution'> {this.state.awaiting} </Panel>\r\n\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t<FlexboxGrid.Item colspan={8}>\r\n\t\t\t\t\t\t<Panel bordered style={{backgroundColor: '#272b34'}} header='Ready for Publishing'> {this.state.ready} </Panel>\t\t\t\r\n\t\t\t\t\t</FlexboxGrid.Item>\t\t\t\t\t\r\n\t\t\t\t</FlexboxGrid>\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div  style={{height: '15vh'}}>\r\n\t\t\t\t\t<Divider>Editing</Divider>\r\n\t\t\t\t\t<Panel>\r\n\t\t\t\t\t\t<ButtonGroup >\r\n\t\t\t\t\t\t\t<Button appearance=\"ghost\" color='red' onClick={() => this.setState({ warningModal: true })}>Close Actions</Button>\r\n\t\t\t\t\t\t\t<Button appearance=\"ghost\" color='green' onClick={() => this.setState({ warning2Modal: true })}>Publish Resolutions</Button>\r\n\t\t\t\t\t\t\t<Button appearance=\"ghost\" disabled={this.isControl()} onClick={() => this.setState({ gsModal: true })} >Edit Game State</Button>\r\n\t\t\t\t\t\t\t<Button appearance=\"ghost\" onClick={() => this.setState({ assModal: true })}>Edit or Delete Asset/Trait</Button>\r\n\t\t\t\t\t\t\t<Button color='orange' appearance=\"ghost\" onClick={() => this.setState({ projectModal: true })}>New Project</Button>\r\n\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t</Panel>\r\n\t\t\t\t\t<Divider>Round {this.props.gamestate.round}</Divider>\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Panel style={{height: '46vh'}}>\r\n\t\t\t\t\t<Table virtualized data={this.state.tableData} >\r\n\t\t\t\t\t\t<Column flexGrow={1}>\r\n\t\t\t\t\t\t<HeaderCell>Controller</HeaderCell>\r\n\t\t\t\t\t\t<Cell dataKey=\"control\" />\r\n\t\t\t\t\t\t</Column>\r\n\r\n\t\t\t\t\t\t<Column flexGrow={2}>\r\n\t\t\t\t\t\t<HeaderCell>Character</HeaderCell>\r\n\t\t\t\t\t\t<Cell dataKey=\"character\" />\r\n\t\t\t\t\t\t</Column>\r\n\r\n\t\t\t\t\t\t<Column align=\"left\" flexGrow={3}>\r\n\t\t\t\t\t\t<HeaderCell>Description</HeaderCell>\r\n\t\t\t\t\t\t<Cell  dataKey=\"description\" />\r\n\t\t\t\t\t\t</Column>\r\n\r\n\t\t\t\t\t\t<Column align=\"left\" flexGrow={2}>\r\n\t\t\t\t\t\t<HeaderCell>Die Result</HeaderCell>\r\n\t\t\t\t\t\t<Cell  dataKey=\"dieResult\" />\r\n\t\t\t\t\t\t</Column>\r\n\r\n\t\t\t\t\t\t<Column flexGrow={1}>\r\n\t\t\t\t\t\t<HeaderCell>Control Assigned</HeaderCell>\r\n\t\t\t\t\t\t<Cell dataKey=\"controlAssigned\" />\r\n\t\t\t\t\t\t</Column>\t\t\t\r\n\r\n\t\t\t\t\t\t<Column flexGrow={1}>\r\n\t\t\t\t\t\t<HeaderCell>Status</HeaderCell>\r\n\t\t\t\t\t\t<Cell dataKey=\"status\" />\r\n\t\t\t\t\t\t</Column>\t\r\n\r\n\t\t\t\t\t\t<Column flexGrow={1}>\r\n\t\t\t\t\t\t<HeaderCell>News</HeaderCell>\r\n\t\t\t\t\t\t<Cell dataKey=\"newsworthy\" />\r\n\t\t\t\t\t\t</Column>\t\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</Panel>\r\n\r\n\t\t\t\t<Modal size='sm' show={this.state.gsModal} onHide={() => this.setState({ gsModal: false })} > \r\n\t\t\t\t\t<Form formValue={this.state.formValue} layout=\"center\" onChange={formValue => {this.setState({ formValue });}}>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<ControlLabel>Game State </ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl name=\"status\" data={pickerData} accepter={InputPicker} />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<ControlLabel>Round</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl name=\"round\" cleanable={false} accepter={InputNumber} />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<ControlLabel>End Time</ControlLabel>\r\n\t\t\t\t\t\t\t<DatePicker value={this.state.endTime} onChange={this.handleDate} format=\"YYYY-MM-DD HH:mm\"></DatePicker>\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t\t<Modal.Footer>\r\n        \t  <Button loading={this.state.loading} onClick={() => this.editGameState()} disabled={(this.state.formValue.status === null)} appearance=\"primary\">\r\n        \t    Submit\r\n        \t  </Button>\r\n        \t  <Button onClick={() => this.setState({ gsModal: false })} appearance=\"subtle\">\r\n        \t    Cancel\r\n         \t </Button>\r\n        </Modal.Footer>\r\n\t\t\t\t</Modal>\r\n\r\n\t\t\t\t<Modal backdrop='static' size='md' show={this.state.projectModal} onHide={() => this.setState({ projectModal: false })}>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tName\t\t\r\n\t\t\t\t</p> \r\n\t\t\t\t\t<textarea value={this.state.projName} style={textStyle} onChange={(event)=> this.setState({ projName: event.target.value })}></textarea>\t\r\n\t\t\t\t<p>\r\n\t\t\t\t\tDescription\t\t\r\n\t\t\t\t</p> \r\n\t\t\t\t<textarea rows='4' value={this.state.projDescription} style={textStyle} onChange={(event)=> this.setState({projDescription: event.target.value})}></textarea>\t\r\n\t\t\t\t<p>\r\n\t\t\t\t\tImage\r\n\t\t\t\t</p>\r\n\t\t\t\t<textarea value={this.state.image} style={textStyle} onChange={(event)=> this.setState({ image: event.target.value })}></textarea>\t\r\n\t\t\t\t<p>\r\n\t\t\t\t\tProgress\r\n\t\t\t\t</p>\r\n\t\t\t\t<InputNumber value={this.state.progress} onChange={(event)=> this.setState({progress: event})}></InputNumber>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tPlayers\r\n\t\t\t\t</p>\r\n\t\t\t\t\t<TagPicker data={this.props.characters} labelKey='characterName' valueKey='characterName' block onChange={(event)=> this.setState({ players: event })}></TagPicker>\r\n\t\t\t\t\t<Modal.Footer>\r\n        \t  <Button onClick={() => this.newProject()} appearance=\"primary\">\r\n        \t    Submit\r\n        \t  </Button>\r\n        \t  <Button onClick={() => this.setState({ projectModal: false })} appearance=\"subtle\">\r\n        \t    Cancel\r\n         \t </Button>\r\n        </Modal.Footer>\r\n\t\t\t\t</Modal>\r\n\t\t\r\n\t\t\t\t<Modal backdrop=\"static\" size='sm' show={this.state.warningModal} onHide={() => this.setState({ warningModal: false })}>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<Icon icon=\"remind\" style={{ color: '#ffb300', fontSize: 24 }}/>\r\n\t\t\t\t\t\t\t{'  '}\r\n\t\t\t\t\t\t\tWaring! Are you sure you want to close the round? This will lock down all actions.\r\n\t\t\t\t\t\t\t<Icon icon=\"remind\" style={{ color: '#ffb300', fontSize: 24 }}/>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t<Modal.Footer>\r\n            <Button onClick={() => this.closeDraft()} appearance=\"primary\">\r\n              I am Sure!\r\n            </Button>\r\n            <Button onClick={() => this.setState({ warningModal: false })} appearance=\"subtle\">\r\n              Nevermind\r\n            </Button>\r\n          </Modal.Footer>\r\n\t\t\t\t</Modal>\r\n\t\t\t\r\n\t\t\t\t<Modal backdrop=\"static\" size='sm' show={this.state.warning2Modal} onHide={() => this.setState({ warning2Modal: false })}>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<Icon icon=\"remind\" style={{ color: '#ffb300', fontSize: 24 }}/>\r\n\t\t\t\t\t\t\t{'  '}\r\n\t\t\t\t\t\t\tWaring! Are you sure you want to publish all actions? This will:\r\n\t\t\t\t\t\t\t<Icon icon=\"remind\" style={{ color: '#ffb300', fontSize: 24 }}/>\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\tMake all actions that are \"Ready for Publishing\" to \"Published\"\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\tRecall all Lent Assets to their owners\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\tPush the round to it's next number\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t<Modal.Footer>\r\n            <Button onClick={() => this.publishActions()} appearance=\"primary\">\r\n              I am Sure!\r\n            </Button>\r\n            <Button onClick={() => this.setState({ warning2Modal: false })} appearance=\"subtle\">\r\n              Nevermind\r\n            </Button>\r\n          </Modal.Footer>\r\n\t\t\t\t</Modal>\r\n\t\t\t\r\n\t\t\t\t<Modal size='sm' show={this.state.assModal} onHide={() => this.setState({ assModal: false })}>\r\n\t\t\t\t\t<SelectPicker block placeholder=\"Edit or Delete Asset/Trait\" onChange={(event) => this.handleChage(event)} data={this.props.assets.filter(el => el.model !== 'Wealth')} valueKey='_id' labelKey='name'></SelectPicker>\r\n\t\t\t\t\t\t{this.renderAss()}\r\n\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t{this.state.selected && \r\n\t\t\t\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t\t\t\t<Button loading={this.state.loading}  onClick={() => this.assetModify()} color=\"blue\">Edit</Button>\r\n\t\t\t\t\t\t\t\t<Button loading={this.state.loading}  onClick={() => this.handleDelete()} color=\"red\">Delete</Button>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ButtonGroup>}\r\n\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t</Modal>\r\n\t\t\t</Content>\r\n\t\t );\r\n\t}\r\n\r\n\thandleDate = (value) => {\r\n\t\tthis.setState({ endTime: value })\r\n\t}\r\n\r\n\thandleChage = (event) => {\r\n\t\tif (event) {\r\n\t\t\tconst selected = this.props.assets.find(el => el._id === event);\r\n\t\t\tthis.setState({ selected: event, name: selected.name, description: selected.description, uses: selected.uses })\t\t\t\r\n\t\t}\r\n\t\telse this.setState({ selected: '', name: '', description: '', uses: 0 })\t\t\t\r\n\t}\r\n\r\n\tassetModify = async () => {\r\n\t\tthis.setState({ loading: true });\r\n\t\tconst data = {\r\n\t\t\tid: this.state.selected,\r\n\t\t\tname: this.state.name,\r\n\t\t\tdescription: this.state.description,\r\n\t\t\tuses: this.state.uses\r\n\t\t}\r\n\t\tsocket.emit('assetRequest', 'modify', { data }); // new Socket event\t\r\n\t\tthis.setState({ assModal: false, selected: null, loading: false });\r\n\t}\r\n\r\n\trenderAss = () => {\r\n\t\tif (this.state.selected) {\r\n\t\t\treturn (\r\n\t\t\t\t<Panel>\r\n\t\t\t\t\tName:\r\n\t\t\t\t\t<textarea value={this.state.name} style={textStyle} onChange={(event)=> this.setState({ name: event.target.value })}></textarea>\t\r\n\t\t\t\t\tDescription:\r\n\t\t\t\t\t<textarea rows='4' value={this.state.description} style={textStyle} onChange={(event)=> this.setState({description: event.target.value})}></textarea>\t\r\n\t\t\t\t\tUses: <InputNumber value={this.state.uses} onChange={(event)=> this.setState({uses: event})}></InputNumber>\r\n\t\t\t\t</Panel>\t\t\t\r\n\t\t\t)\t\t\t\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn (\r\n\t\t\t\t<Placeholder.Paragraph rows={5} >Awaiting Selection</Placeholder.Paragraph>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\thandleDelete = async () => {\r\n\t\tsocket.emit('assetRequest', 'delete', { id: this.state.selected }); // new Socket event\t\r\n\t}\r\n\r\n\teditGameState = async () => {\r\n\t\tconst data = {\r\n\t\t\tround: this.state.formValue.round,\r\n\t\t\tstatus: this.state.formValue.status,\r\n\t\t\tendTime: this.state.endTime\r\n\t\t}\r\n\t\tsocket.emit('gamestateRequest', 'modify', { data }); // new Socket event\t\r\n\t\tthis.setState({ gsModal: false });\r\n\t}\r\n\r\n\tcloseDraft = async () => {\r\n\t\tsocket.emit('gamestateRequest', 'closeRound', 'Hello'); // new Socket event\r\n\t\tthis.setState({ warningModal: false });\r\n\t}\r\n\r\n\tpublishActions = async () => {\r\n\t\tsocket.emit('gamestateRequest', 'nextRound', 'Hello'); // new Socket event\r\n\t\tthis.setState({ warning2Modal: false });\t\r\n\t}\r\n\r\n\tnewProject = async () => {\r\n\t\tconst data = {\r\n\t\t\tdescription: this.state.projName,\r\n\t\t\tintent: this.state.projDescription,\r\n\t\t\teffort: 0,\r\n\t\t\tprogress: this.state.progress,\r\n\t\t\tmodel: \"Project\",\r\n\t\t\tplayers: this.state.players,\r\n\t\t\tcreator: this.props.playerCharacter,\r\n\t\t\tround: this.props.gamestate.round, \r\n\t\t\timage: this.state.image,\r\n\t\t\tstatus: {\r\n\t\t\t\tdraft: false,\r\n\t\t\t\tpublished: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tsocket.emit('actionRequest', 'create', { data: data }); // new Socket event\r\n\t}\r\n\r\n\tisControl () {\r\n\t\tif (this.props.user.roles.some(el => el === \"Control\")) return false;\r\n\t\telse return true;\r\n\t}\r\n\r\n\tfilterAssets () {\r\n\t\tconst filtered = this.props.assets.filter(el => el.modal !== 'Wealth')\r\n\t}\r\n\t\r\n}\r\n \r\nconst style1 = {\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n};\r\n\r\nconst pickerData = [\r\n\t{\r\n\t\tlabel: 'Active',\r\n\t\tvalue: 'Active'\r\n\t},\r\n\t{\r\n\t\tlabel: 'Resolution',\r\n\t\tvalue: 'Resolution'\r\n\t},\r\n\t{\r\n\t\tlabel: 'Down',\r\n\t\tvalue: 'Down'\r\n\t},\r\n]\r\n\r\nconst textStyle = {\r\n\tbackgroundColor: '#1a1d24', \r\n\tborder: '1.5px solid #3c3f43', \r\n\tborderRadius: '5px', \r\n\twidth: '100%',\r\n\tpadding: '5px',\r\n\toverflow: 'auto', \r\n\tscrollbarWidth: 'none',\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tuser: state.auth.user,\r\n\tassets: state.assets.list,\r\n\tlogin: state.auth.login,\r\n\tgamestate: state.gamestate,\r\n\tcharacters: state.characters.list,\r\n\tactions: state.actions.list,\r\n\tdraftActions: draftActions(state),\r\n\tplayerCharacter: state.auth.user ? getMyCharacter(state) : undefined\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ControlTerminal);\r\n","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\navigationBar.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\Login.jsx",["187","188"],"import React, { useEffect } from 'react'; // React imports\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button, ControlLabel, Form, FormControl, FormGroup, Modal, Schema } from 'rsuite';\r\nimport { loadAssets } from '../../redux/entities/assets';\r\nimport { authReceived, loginUser } from '../../redux/entities/auth';\r\nimport { loadCharacters } from '../../redux/entities/characters';\r\nimport { loadGamestate } from '../../redux/entities/gamestate';\r\nimport { loadplayerActions } from '../../redux/entities/playerActions';\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nconst Login = props => {\r\n\tlet { login, tokenLogin, loadAction, user } = props;\r\n    const [errors, setErrors] = React.useState({});\r\n    const [formValue, setFormValue] = React.useState({ email: '', password: '',});\r\n\r\n\tconst history = useHistory();\r\n\t\r\n\t// console.log('Mounting App...')\r\n\t\r\n\r\n\tuseEffect(() => {\r\n\t\tlet token = localStorage.getItem('token');\r\n\t\tif (token && login === false) {\r\n\t\t\ttokenLogin(token);\r\n\t\t} \r\n\t}, [login, tokenLogin])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (login) {\r\n\t\t\tloadAction(user);\r\n\t\t\thistory.push('/home');\r\n\t\t}\r\n\t}, [login, user, loadAction, history])\r\n\r\n\r\n\r\n    return ( \r\n\t\t<Modal backdrop=\"static\" show={true}>\r\n\t\t<Modal.Header>\r\n\t\t\t<Modal.Title>Login</Modal.Title>\r\n\t\t</Modal.Header>\r\n\t\t<Modal.Body>\r\n\t\t\t<Form model={model} fluid formValue={formValue} onChange={form => setFormValue(form)}>\r\n\t\t\t<FormGroup>\r\n\t\t\t\t\t<ControlLabel>Email / Username</ControlLabel>\r\n\t\t\t\t\t<FormControl errorMessage={props.error} errorPlacement='topEnd' name=\"email\" accepter={model.accepter}/>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<ControlLabel>Password</ControlLabel>\r\n\t\t\t\t\t<FormControl errorMessage={props.error} errorPlacement='topEnd' name=\"password\" type=\"password\" />\r\n\t\t\t\t</FormGroup>\r\n\t\t\t</Form>\r\n\t\t</Modal.Body>\r\n\t\t<Modal.Footer>\r\n\t\t\t<Button loading={props.loading} onClick={() => {\r\n                props.handleLogin({ user: formValue.email, password: formValue.password })\r\n                }} appearance=\"primary\">\r\n\t\t\t\tSubmit\r\n\t\t\t</Button>\r\n\t\t</Modal.Footer>\r\n\t</Modal> \r\n\t);\r\n}\r\n\r\nconst model = Schema.Model({\r\n    email: StringType()\r\n    .isRequired('This field is required.')\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tauth: state.auth,\r\n\tlogin: state.auth.login,\r\n\terror: state.auth.error,\r\n\tuser: state.auth.user,\r\n\tloading: state.auth.loading,\r\n\tactionsLast: state.actions.lastFetch,\r\n\tassetsLast: state.assets.lastFetch,\r\n\tcharactersLast: state.characters.lastFetch,\r\n\tgamestateLast: state.gamestate.lastFetch,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\thandleLogin: (data) => dispatch(loginUser(data)),\r\n\ttokenLogin: (data) => dispatch(authReceived(data)),\r\n\tloadChar: (data) => dispatch(loadCharacters()),\r\n\tloadAction: (data) => dispatch(loadplayerActions(data)),\r\n\tloadAssets: (data) => dispatch(loadAssets()),\r\n\tloadGamestate: (data) => dispatch(loadGamestate())\r\n\t// updateUser: (user) => dispatch(updateUser({ user }))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Control\\control.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\MyCharacters\\myCharacter.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\OtherCharacters\\OtherCharacters.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Actions\\NewAction.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Actions\\ActionList.jsx",["189"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {List, FlexboxGrid, Container, } from 'rsuite';\r\nimport { getMyCharacter } from '../../redux/entities/characters';\r\nimport { filteredActions, getMyActions } from '../../redux/entities/playerActions';\r\n\r\nclass ActionList extends Component {\r\n\tstate = { \r\n\t\trounds: []\r\n\t }\r\n\r\n\t componentDidMount = async () => {\r\n\t\t try {\r\n\t\t\tthis.createListCatagories();\r\n\t\t }\r\n\t\t catch (err) {\r\n\t\t\t console.log(err);\r\n\t\t }\r\n\t\t}\r\n\r\n\t\tcomponentDidUpdate = (prevProps) => {\r\n\t\t\tif (this.props.filteredActions !== prevProps.filteredActions) {\r\n\t\t\t\tthis.createListCatagories();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\tlistStyle (item) {\r\n\t\tif (item.model === \"Project\") {\r\n\t\t\treturn ({cursor: 'pointer', backgroundColor: \"#274472\", textAlign: \"center\", flexDirection: 'column', alignItems: 'center'})\r\n\t\t}\r\n\t\telse if (item === this.props.selected) {\r\n\t\t\treturn ({cursor: 'pointer', backgroundColor: \"#212429\"})\r\n\t\t}\r\n\t\telse return({cursor: 'pointer'});\r\n\t}\r\n\r\n\tcreateListCatagories = () => {\r\n\t\tconst rounds = [];\r\n\t\tfor (const action of this.props.filteredActions) {\r\n\t\t\tif (!rounds.some(el => el === action.round)) rounds.push(action.round);\r\n\t\t}\r\n\t\trounds.reverse();\r\n\t\tthis.setState({ rounds });\r\n\t}\r\n\r\n\trender() { \r\n\t\treturn ( \r\n\t\t\t<Container>\r\n\t\t\t\t{this.state.rounds.map((round, index) => (\r\n\t\t\t\t\t<React.Fragment key={index}>\r\n\t\t\t\t\t<h6 style={{backgroundColor: \"#61342e\"}}>Round {round}</h6>\t\r\n\t\t\t\t\t<List key={index} hover size=\"sm\" >\r\n\t\t\t\t\t\t{this.props.filteredActions.filter(el => el.round === round).map((action, index) => (\r\n\t\t\t\t\t\t\t<List.Item key={index} index={index} size={'sm'} onClick={()=>this.props.handleSelect(action)} style={this.listStyle(action)}>\r\n\t\t\t\t\t\t\t\t<FlexboxGrid>\r\n\t\t\t\t\t\t\t\t\t<FlexboxGrid.Item colspan={24} style={{...styleCenter, flexDirection: 'column', alignItems: 'flex-start', overflow: 'hidden'}}>\r\n\t\t\t\t\t\t\t\t\t\t<div style={titleStyle}>{action.description}</div>\r\n\t\t\t\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t\t\t</FlexboxGrid>\r\n\t\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</List>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t</React.Fragment>\r\n\r\n\t\t\t\t))}\t\t\r\n\t\t\t</Container>\r\n\t\t );\r\n\t}\r\n}\r\n \r\nconst styleCenter = {\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  height: '60px'\r\n};\r\nconst titleStyle = {\r\n\tpaddingBottom: 5,\r\n\tpaddingLeft: 5,\r\n  whiteSpace: 'nowrap',\r\n  fontWeight: 500\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tuser: state.auth.user,\r\n\tgamestate: state.gamestate,\r\n\tmyCharacter: state.auth.user ? getMyCharacter(state): undefined,\r\n\tfilteredActions: filteredActions(state)//state.auth.control ? filteredActions(state) : \tgetMyActions(state) \r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // handleLogin: (data) => dispatch(loginUser(data))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActionList);","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Actions\\SelectedAction.jsx",["190","191","192","193","194"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Slider, Panel, FlexboxGrid, Content, Tag, TagGroup, ButtonGroup, Button, Modal, Alert, InputPicker, InputNumber, Divider, Progress, Form, FormGroup, ControlLabel, FormControl, Toggle, SelectPicker } from 'rsuite';\r\nimport { getUnusuedAssets } from '../../redux/entities/assets';\r\nimport { characterUpdated, getMyCharacter } from '../../redux/entities/characters';\r\nimport { actionDeleted } from '../../redux/entities/playerActions';\r\nimport socket from '../../socket';\r\n/* To Whoever is reading this code. The whole \"action\" branch turned into a real mess, for which I am sorry. If you are looking into a better way of implementation, try the OtherCharacters page for lists. I hate forms.... */\r\nclass SelectedAction extends Component {\r\n\tstate = { \r\n\t\tedit: null, // used to open edit action popup\r\n\t\tresEdit: null,\t// used to open action result popup\r\n\t\tloading: false, //used for loading button \r\n\t\teffort: 1,\r\n\t\tasset1: '',\r\n\t\tasset2: '',\r\n\t\tasset3: '',\r\n\t\tid: '',\r\n\t\tdescription: '',\r\n\t\tintent: '',\t\r\n\t\tresult: this.props.action.result,\r\n\t\tdieResult: this.props.action.dieResult,\r\n\t\tstatus: '',\r\n\t\tbonus: this.props.action.bonus,\r\n\t\tusedAssets: []\r\n\t }\r\n\r\n\t componentDidMount = () => {\r\n\t\t\t\tlet array2 = [];\r\n\t\t\t\tfor (const el of this.props.unusedAssets) {\r\n\t\t\t\t\tarray2.push(el.name)\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setState({ usedAssets: array2 }); \r\n\t }\r\n\r\n\t componentDidUpdate = (prevProps) => {\r\n\t\tif (this.props.assetsRedux !== prevProps.assetsRedux) {\r\n\t\t\tconst array = this.props.assetsRedux.filter(el => el.status.used === true);\r\n\t\t\tlet array2 = [];\r\n\t\t\tfor (const el of array) {\r\n\t\t\t\tarray2.push(el.name)\r\n\t\t\t}\r\n\t\t\tthis.setState({ usedAssets: array2 });\t\t\r\n\t\t}\r\n\t\tif (this.props.actions !== prevProps.actions) {\r\n\t\t\tthis.setState({ \t\r\n\t\t\t\tresult: this.props.action.result,\r\n\t\t\t\tdieResult: this.props.action.dieResult, \r\n\t\t\t});\t\t\r\n\t\t}\r\n\t}\r\n\r\n\trender() { \r\n\t\tconst action = this.props.action;\r\n\t\treturn ( \r\n\t\t\t<React.Fragment >\r\n\t\t\t<FlexboxGrid >\r\n\t\t\t\t<FlexboxGrid.Item colspan={2} >\r\n\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t<FlexboxGrid.Item colspan={16} >\r\n\t\t\t\t\t<Panel shaded style={{padding: \"0px\", textAlign: \"left\", backgroundColor: \"#15181e\", whiteSpace: 'pre-line'}}>\r\n\t\t\t\t\t\t<p style={{ fontSize: '300', color: '#97969B', fontWeight: 'lighter',\twhiteSpace: 'nowrap',}}>\r\n\t\t\t\t\t\t\tCreated by: {action.creator.characterName}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p style={slimText}>\r\n\t\t\t\t\t\t\tDescription\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t{action.description}\t\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p style={slimText}>\r\n\t\t\t\t\t\t\tIntent\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t{action.intent}\t\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p style={slimText}>\r\n\t\t\t\t\t\t\tEffort\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p style={{ textAlign: 'center', fontWeight: 'bolder', fontSize: 20 }} >{action.effort}</p>\r\n\t\t\t\t\t\t<Progress.Line percent={action.effort * 33 + 1} showInfo={false}>  </Progress.Line>\r\n\t\t\t\t\t\t<Divider>Assets/Traits</Divider>\r\n\t\t\t\t\t\t<FlexboxGrid>\r\n\t\t\t\t\t\t\t<FlexboxGrid.Item colspan={8}>\r\n\t\t\t\t\t\t\t\t{this.renderAsset(action.asset1)}\r\n\t\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t\t<FlexboxGrid.Item colspan={8}>\r\n\t\t\t\t\t\t\t{this.renderAsset(action.asset2)}\r\n\t\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t\t<FlexboxGrid.Item colspan={8}>\r\n\t\t\t\t\t\t\t{this.renderAsset(action.asset3)}\r\n\t\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t</FlexboxGrid>\r\n\t\t\t\t\t</Panel>\r\n\t\t\t\t\t{(action.status === 'Published' || this.props.user.roles.some(el=> el === 'Control')) && \r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Divider>Action Result</Divider>\r\n\t\t\t\t\t\t<Panel style={{textAlign: \"left\", backgroundColor: \"#61342e\",  whiteSpace: 'pre-line'}}>\r\n\t\t\t\t\t\t\t<p style={slimText}>Result</p>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t{action.result}\t\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</Panel>\t\t\t\t\t\t\r\n\t\t\t\t\t</React.Fragment>}\r\n\r\n\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t<FlexboxGrid.Item colspan={1} />\r\n\t\t\t\t<FlexboxGrid.Item colspan={5}>\r\n\t\t\t\t\t<Panel style={{backgroundColor: '#15181e', border: '2px solid rgba(255, 255, 255, 0.12)', textAlign: 'center'}}>\r\n\t\t\t\t\t\t<TagGroup >Status:\r\n\t\t\t\t\t\t\t{action.status === 'Draft' && <Tag color='red'>Draft</Tag>}\r\n\t\t\t\t\t\t\t{!action.status === 'Awaiting' && <Tag color='blue'>Awaiting Resolution</Tag>}\r\n\t\t\t\t\t\t\t{action.status === 'Ready' && <Tag color='violet'>Ready for Publishing</Tag>}\r\n\t\t\t\t\t\t\t{action.status === 'Published' && <Tag color='green'>Published</Tag>}\r\n\t\t\t\t\t\t</TagGroup>\r\n\t\t\t\t\t\t\t<ButtonGroup style={{ marginTop: '5px' }} >\r\n\t\t\t\t\t\t\t\t<Button appearance={\"ghost\"} disabled={action.status !== 'Draft'} onClick={() => this.openEdit()} >Edit</Button>\r\n\t\t\t\t\t\t\t\t<Button color='red' appearance={\"ghost\"} disabled={action.status !== 'Draft'} onClick={() => this.deleteAction()}>Delete</Button>\r\n\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t</Panel>\r\n\t\t\t\t\t{this.props.user.roles.some(el=> el === 'Control') && \r\n\t\t\t\t\t\t<Panel header={\"Control Panel\"} style={{backgroundColor: '#61342e', border: '2px solid rgba(255, 255, 255, 0.12)', textAlign: 'center'}}>\r\n\t\t\t\t\t\t\t<ButtonGroup style={{marginTop: '5px', }} >\r\n\t\t\t\t\t\t\t\t<Button appearance={\"ghost\"} onClick={() => this.setState({ resEdit: true })}>Edit Result</Button>\r\n\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t</Panel>}\r\n\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t</FlexboxGrid>\t\r\n\r\n\t\t\t<Modal overflow \r\n\t\t\tfull\r\n\t\t\tsize='lg'  \r\n\t\t\tshow={this.state.edit} \r\n\t\t\tonHide={() => this.closeEdit()}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Edit an Action</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<FlexboxGrid> Description\r\n\t\t\t\t\t\t<textarea rows='6' value={this.state.description} style={textStyle} onChange={(event)=> this.setState({description: event.target.value})}></textarea>\t\t\t\t\t\t\t\r\n\t\t\t\t\t</FlexboxGrid>\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t<FlexboxGrid> What you would like to happen\r\n\t\t\t\t\t\t<textarea rows='6' value={this.state.intent} style={textStyle} onChange={(event)=> this.setState({intent: event.target.value})} ></textarea>\t\t\t\t\t\t\t\r\n\t\t\t\t\t</FlexboxGrid>\r\n\t\t\t\t\t<FlexboxGrid>\r\n\t\t\t\t\t\t<FlexboxGrid.Item style={{paddingTop: '25px', paddingLeft: '10px', textAlign: 'left'}} align=\"middle\" colspan={6}>Effort\r\n\t\t\t\t\t\t\t<Slider graduated\r\n\t\t\t\t\t\t\tmin={0}\r\n\t\t\t\t\t\t\tmax={this.props.myCharacter.effort + this.props.action.effort}\r\n\t\t\t\t\t\t\tdefaultValue={this.state.effort}\r\n\t\t\t\t\t\t\tprogress\r\n\t\t\t\t\t\t\tvalue={this.state.effort}\r\n\t\t\t\t\t\t\tonChange={(event)=> this.setState({effort: event})}>\r\n\t\t\t\t\t\t\t</Slider>\r\n\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t<FlexboxGrid.Item style={{paddingTop: '25px', paddingLeft: '10px', textAlign: 'left'}} colspan={2}>\r\n\t\t\t\t\t\t\t<InputNumber value={this.state.effort} max={this.props.myCharacter.effort + this.props.action.effort} min={0} onChange={(value)=> this.setState({effort: parseInt(value)})}></InputNumber>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t<FlexboxGrid.Item colspan={4}>\r\n\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t<FlexboxGrid.Item style={{paddingTop: '5px', paddingLeft: '10px', textAlign: 'left'}}  colspan={10}> Assets/Traits\r\n\t\t\t\t\t\t\t<SelectPicker  defaultValue={this.state.asset1} placeholder=\"Slot 1\" labelKey='name' valueKey='name' data={this.props.assets} style={{ width: '100%' }} disabledItemValues={this.state.usedAssets} onChange={(event)=> this.setState({asset1: event})}/>\r\n\t\t\t\t\t\t\t<InputPicker defaultValue={this.state.asset2} placeholder=\"Slot 2\" labelKey='name' valueKey='name' data={this.props.assets} style={{ width: '100%' }} disabledItemValues={this.state.usedAssets} onChange={(event)=> this.setState({asset2: event})}/>\r\n\t\t\t\t\t\t\t<InputPicker defaultValue={this.state.asset3} placeholder=\"Slot 3\" labelKey='name' valueKey='name' data={this.props.assets} style={{ width: '100%' }} disabledItemValues={this.state.usedAssets} onChange={(event)=> this.setState({asset3: event})}/>\r\n\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t</FlexboxGrid>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n          <Button loading={this.state.loading} onClick={() => this.handleSubmit()} disabled={this.state.effort === 0} appearance=\"primary\">\r\n            Submit\r\n          </Button>\r\n          <Button onClick={() => this.closeEdit()} appearance=\"subtle\">\r\n            Cancel\r\n          </Button>\r\n        </Modal.Footer>\r\n\t\t\t</Modal>\r\n\r\n\t\t\t<Modal overflow\r\n\t\t\tfull\r\n\t\t\tsize='lg'  \r\n\t\t\tshow={this.state.resEdit} \r\n\t\t\tonHide={() => this.closeResult()}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Edit {action.creator.characterName}'s Action Result</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<FlexboxGrid>\r\n\t\t\t\t\t\t<FlexboxGrid.Item colspan={10}>\r\n\t\t\t\t\t\t\t<p style={{  fontSize: '0.966em', color: '#97969B', \tfontWeight: '300',}}>\r\n\t\t\t\t\t\t\t\tDescription\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t{action.description}\t\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t<FlexboxGrid.Item colspan={10}>\r\n\t\t\t\t\t\t\t<p style={{ fontSize: '0.966em', color: '#97969B', \tfontWeight: '300', }}>\r\n\t\t\t\t\t\t\t\tIntent\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t{action.intent}\t\r\n\t\t\t\t\t\t\t</p>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t<FlexboxGrid.Item colspan={4}>\r\n\t\t\t\t\t\t\t<p style={{ \ttextAlign: \"center\", fontSize: '0.966em', color: '#97969B', \tfontWeight: '300',}}>\r\n\t\t\t\t\t\t\t\tEffort\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p style={{ fontWeight: 'bolder', \ttextAlign: \"center\", fontSize: 20 }} >{action.effort}</p>\r\n\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t</FlexboxGrid>\r\n\r\n\t\t\t\t<Divider></Divider>\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<textarea rows='6' value={this.state.result} style={textStyle} onChange={(event)=> this.setState({result: event.target.value})}></textarea>\t\t\t\t\t\t\t\r\n\t\t\t\t\t<Divider></Divider>\r\n\t\t\t\t\t<FlexboxGrid justify=\"start\">\r\n\t\t\t\t\t\t<FlexboxGrid.Item  colspan={11}>\r\n\t\t\t\t\t\t\t<b>Bonus Resources Awarded</b>\r\n\t\t\t\t\t\t\t<textarea rows='4' value={this.state.bonus} style={textStyle} onChange={(event)=> this.setState({bonus: event.target.value})}></textarea>\t\t\t\r\n\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t<FlexboxGrid.Item colspan={1}/>\r\n\t\t\t\t\t\t<FlexboxGrid.Item colspan={12}>\r\n\t\t\t\t\t\t\t<FlexboxGrid>\r\n\t\t\t\t\t\t\t\t<FlexboxGrid.Item colspan={24}>\r\n\t\t\t\t\t\t\t\t\t<b>Status</b>\r\n\t\t\t\t\t\t\t\t\t<InputPicker labelKey='label' valueKey='value' data={pickerData} style={{ width: '100%' }} onChange={(event)=> this.setState({status: event})}/>\r\n\t\t\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t\t\t<FlexboxGrid.Item colspan={24}>\r\n\t\t\t\t\t\t\t\t\t<b>Die Result</b>\r\n\t\t\t\t\t\t\t\t\t<textarea value={this.state.dieResult} style={textStyle} onChange={(event)=> this.setState({dieResult: event.target.value})}></textarea>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t\t</FlexboxGrid>\r\n\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t</FlexboxGrid>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button loading={this.state.loading} onClick={() => this.handleSubmit()} appearance=\"primary\">\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button onClick={() => this.closeResult()} appearance=\"subtle\">\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</React.Fragment>\t\t\r\n\t\t );\r\n\t}\r\n\r\n\topenEdit = () => {\r\n\t\tconst action = this.props.action;\r\n\r\n\t\tthis.setState({ \r\n\t\t\tdescription: action.description, \r\n\t\t\tintent: action.intent, \r\n\t\t\teffort: action.effort, \r\n\t\t\tid: action._id, \r\n\t\t\tasset1: action.asset1,\r\n\t\t\tasset2: action.asset2,\r\n\t\t\tasset3: action.asset3,\r\n\t\t\tedit: true })\r\n\t}\r\n\r\n\thandleSubmit = async () => {\r\n\t\tthis.setState({loading: true}) \r\n\t\tconst action = {\r\n\t\t\teffort: this.state.effort,\r\n\t\t\tasset1: this.state.asset1,\r\n\t\t\tasset2: this.state.asset2,\r\n\t\t\tasset3: this.state.asset3,\r\n\t\t\tdescription: this.state.description,\r\n\t\t\tintent: this.state.intent,\r\n\t\t\tresult: this.state.result,\r\n\t\t\tdieResult: this.state.dieResult,\r\n\t\t\tstatus: this.state.status,\r\n\t\t\tid: this.props.action._id,\r\n\t\t\tplayerBoolean: this.state.edit\t\r\n\t\t}\r\n\t\t// console.log(action)\r\n\t\t// 1) make a new action\r\n\t\ttry{\r\n\t\t\tsocket.emit('actionRequest', 'update', action); // new Socket event\r\n\t\t\tthis.setState({asset1: '', asset2: '', asset3: '', effort: 0, description: '', intent: '', id: '', result: '', dieResult: 0, status: ''});\t\r\n\r\n\t\t\tthis.closeEdit();\r\n\t\t\tthis.closeResult();\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tAlert.error(`Error: ${err.response.data}`, 6000)\r\n\t\t}\r\n\t\tthis.setState({loading: false});\r\n\t}\r\n\r\n\trenderAsset = (asset) => {\r\n\t\tif (asset) {\r\n\t\t\treturn (\r\n\t\t\t\t\t<Panel style={{backgroundColor: \"#272b34\"}} shaded header={asset} bordered ></Panel>\t\r\n\t\t\t)\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn (\r\n\t\t\t\t\t<Panel style={{backgroundColor: \"#0e1013\"}} shaded header='Empty Slot' bordered ></Panel>\t\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\tcloseEdit = () => { \r\n\t\tthis.setState({edit: false}) \r\n\t};\r\n\r\n\tcloseResult = () => { \r\n\t\tthis.setState({resEdit: false}) \r\n\t};\r\n\r\n\tdeleteAction = async () => {\r\n\t\tsocket.emit('actionRequest', 'delete', {id: this.props.action._id}); // new Socket event\r\n\t\tthis.props.handleSelect(null);\r\n\t};\r\n\r\n\tmyToggle = () => {\r\n\t\treturn (\r\n\t\t\t<Toggle onChange={()=> this.setState({ assetBoolean: !this.state.assetBoolean })} checkedChildren=\"Asset\" unCheckedChildren=\"Trait\"></Toggle>\t\t\t\r\n\t\t)\r\n\t};\r\n}\r\n\r\nconst slimText = {\r\n  fontSize: '0.966em',\r\n  color: '#97969B',\r\n\tfontWeight: '300',\r\n\twhiteSpace: 'nowrap',\r\n\ttextAlign: \"center\"\r\n};\r\n\r\nconst pickerData = [\r\n\t{\r\n\t\tlabel: 'Draft',\r\n\t\tvalue: 'Draft'\r\n\t},\r\n\t{\r\n\t\tlabel: 'Awaiting Resolution',\r\n\t\tvalue: 'Awaiting'\r\n\t},\r\n\t{\r\n\t\tlabel: 'Ready for Publishing',\r\n\t\tvalue: 'Ready'\r\n\t},\r\n\t{\r\n\t\tlabel: 'Published',\r\n\t\tvalue: 'Published'\r\n\t}\r\n]\r\n \r\nconst textStyle = {\r\n\tbackgroundColor: '#1a1d24', \r\n\tborder: '1.5px solid #3c3f43', \r\n\tborderRadius: '5px', \r\n\twidth: '100%',\r\n\tpadding: '5px',\r\n\toverflow: 'auto', \r\n\tscrollbarWidth: 'none',\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tuser: state.auth.user,\r\n\tgamestate: state.gamestate,\r\n\tactions: state.actions.list,\r\n\tassetsRedux: state.assets.list,\r\n  unusedAssets: getUnusuedAssets(state),\r\n  myCharacter: state.auth.user ? getMyCharacter(state): undefined\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\t// handleLogin: (data) => dispatch(loginUser(data))\r\n\tdeleteAction: (data) => dispatch(actionDeleted(data)),\r\n\tupdateCharacter: (data) => dispatch(characterUpdated(data))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectedAction);","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Actions\\SelectedProject.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\loading.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\OtherCharacters\\ModifyCharacter.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\OtherCharacters\\AddAsset.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\NoCharacter.jsx",["195"],"import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Content, FlexboxGrid, Progress } from 'rsuite';\r\nimport { loadplayerActions, loadAllActions } from '../../redux/entities/playerActions';\r\nconst { Circle } = Progress;\r\n\r\nclass NoCharacter extends Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t};\r\n\t}\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <React.Fragment>\r\n            <Content>\r\n                <FlexboxGrid justify=\"center\">\r\n                <FlexboxGrid.Item key={1} colspan={12} style={{marginTop: '50px', cursor: 'pointer'}}>\r\n                    <img src='http://cdn.lowgif.com/full/02b057d73bf288f7-.gif' alt={'No Character...'} onClick={()=> this.bored()} />  \r\n                </FlexboxGrid.Item>\r\n                </FlexboxGrid>\r\n            </Content>\r\n             <p>Looks like you have no character assigned to your user. If you think this is in error then please contact Tech Support. Or just spam f5. It's a free world.</p>\r\n\t\t\t\t\t\t<Button onClick={()=> this.handleLogOut()}>Log Out</Button>\r\n        </React.Fragment>\r\n        );        \r\n    }\r\n\r\n    bored () {\r\n        const random = (Math.floor(Math.random() * bored.length ));\r\n        const win = window.open(bored[random], '_blank');\r\n\t\twin.focus();\r\n    }\r\n\t\thandleLogOut = async () => {\r\n\t\t\tlocalStorage.removeItem('token');\r\n\t\t\tthis.props.history.push('/');\r\n\t\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tassets: state.assets.list,\r\n\tcharacters: state.characters.list,\r\n    actions: state.actions.list,\r\n    actionsFailed: state.actions.failedAttempts,\r\n    charactersFailed: state.characters.failedAttempts,\r\n    assetsFailed: state.assets.failedAttempts,\r\n    gamestate: state.gamestate,\r\n    user: state.auth.user,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tloadAction: (data) => dispatch(loadplayerActions(data)),\r\n    loadAllActions: (data) => dispatch(loadAllActions(data)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoCharacter);\r\n\r\nconst bored = [\r\n\t'https://www.youtube.com/watch?v=QSS3GTmKWVA',\r\n\t'https://www.youtube.com/watch?v=Q6EIUo1q4lc&lc=UgwLB6d6w9RNlqJHQ1t4AaABAg&ab_channel=BobtheNinjaMan',\r\n\t'https://youtu.be/Rc-Jh3Oe0Gc',\r\n\t'https://www.youtube.com/watch?v=BP9uI4rFVHU',\r\n\t'https://www.youtube.com/watch?v=j0HN7bvBODE',\r\n\t'https://www.youtube.com/watch?v=fhmeYoJZeOw',\r\n\t'https://www.youtube.com/watch?v=Oct2xKMGOno',\r\n\t'https://www.youtube.com/watch?v=5tFZof9EDhc',\r\n\t'https://www.youtube.com/watch?v=Qz7tMKlkPOc&t=1',\r\n\t'https://www.youtube.com/watch?v=nWIzwQui-xg',\r\n\t'https://www.youtube.com/watch?v=4ISDUKG-N90&feature=youtu.be',\r\n\t'https://www.youtube.com/watch?v=cHoGhisiBg8&feature=youtu.be',\r\n\t'https://www.youtube.com/watch?v=9xX6QPIQdZs&feature=youtu.be',\r\n\t'https://www.youtube.com/watch?v=it8vJ03E8c8',\r\n\t'https://www.youtube.com/watch?v=bTS9XaoQ6mg&list=WL&index=130',\r\n\t'https://www.youtube.com/watch?v=aiM5KDuHrR4',\r\n\t'https://www.youtube.com/watch?v=zo7fgswQPJ8&list=WL&index=37&ab_channel=ThomasSchuler',\r\n\t'https://www.youtube.com/watch?v=G_rWl-jaAiU',\r\n\t'https://www.youtube.com/watch?v=D5fH5j7ux0U',\r\n\t'https://www.youtube.com/watch?v=B62ACxuq8Pw',\r\n\t'https://www.youtube.com/watch?v=dGDH3meSPyk&list=PLoF28YhYwCLjMcirMvGouxbIeNSqJGi_K&index=22&ab_channel=dakooters',\r\n\t'https://www.youtube.com/watch?v=WGNuDe3OwFY&feature=youtu.be',\r\n\t'https://www.youtube.com/watch?v=AauAyjBxaIQ',\r\n\t'https://www.youtube.com/watch?v=ihSaGAVHmvw',\r\n\t'https://www.youtube.com/watch?v=c7_CcBgZ2e4&feature=share',\r\n\t'https://www.youtube.com/watch?v=gp1lCem43lg',\r\n\t'https://www.youtube.com/watch?v=dh0TkO3sypw',\r\n\t'https://www.youtube.com/watch?v=nHc288IPFzk',\r\n\t'https://www.youtube.com/watch?v=Z47xwzYGop8',\r\n\t'https://www.youtube.com/watch?v=GPUgjy-Pn-4',\r\n\t'https://www.youtube.com/watch?v=St7S3YrxqW0',\r\n\t'https://www.youtube.com/watch?v=otIrDM4RBpo',\r\n\t'https://www.youtube.com/watch?v=mnE8A9cfGio',\r\n\t'https://www.youtube.com/watch?v=0_7WwPkqqvA',\r\n\t'https://www.youtube.com/watch?v=1fjuaBZQtOI',\r\n\t'https://www.youtube.com/watch?v=ozlhNbDJ7DY',\r\n\t'https://www.youtube.com/watch?v=n3GOL_KHxX4',\r\n\t'https://www.youtube.com/watch?v=IdoD2147Fik',\r\n\t'https://www.youtube.com/watch?v=3NCyD3XoJgM',\r\n\t'https://www.youtube.com/watch?v=kNr1HBBeCYM',\r\n\t'https://www.youtube.com/watch?v=JFtUHVgw-gQ',\r\n\t'https://www.youtube.com/watch?v=vYud9sZ91Mc',\r\n\t'https://www.youtube.com/watch?v=PPgLTgWa99w'\r\n];\r\n","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\ImgPanel.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\NavigationBar.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\navigation\\Map.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\Map.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\Test.jsx",["196","197","198","199","200","201","202","203","204","205","206","207","208"],"import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Container, Content, Footer, FlexboxGrid, Button, PanelGroup, Panel, Input, List, RadioGroup, Radio, Toggle, ButtonToolbar, Modal, ButtonGroup, Icon } from 'rsuite';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Map from './Map';\r\nimport FlexboxGridItem from 'rsuite/lib/FlexboxGrid/FlexboxGridItem';\r\nimport { MapInteractionCSS } from 'react-map-interaction';\r\nimport NavigationBar from \"../Navigation/NavigationBar\";\r\n\r\nconst MapContainer = ({ locations }) => {\r\n\tconst [filter, setFilter] = React.useState('');\r\n\tconst [territory, setTerritory] = React.useState({});\r\n\tconst [boolean, setBoolean] = React.useState(false);\r\n\r\n\tconst history = useHistory();\r\n\t\t\r\n\tconst clickHandlerer = (code) => {\r\n    const loc = locations.find(el => el.code === code)\r\n    if (loc) {\r\n      setTerritory(loc);\r\n    }\r\n    else {\r\n      setTerritory({\r\n        name: 'unknown',\r\n        description: 'unknown',\r\n        currentOwner: 'unknown',\r\n        influence: -999\r\n      })\r\n    }\r\n    setBoolean(true);\r\n\t}\r\n\r\n\treturn ( \r\n\t\t<Container style={{ overflow: 'hidden', height: '99vh', width: '100%', position: 'relative', display: 'inline-block', textAlign: 'center', }}>\r\n\t\t\t<NavigationBar/>\r\n      <Content style={{ overflow: 'hidden' }}>\r\n        <FlexboxGrid>\r\n          <FlexboxGrid.Item colspan={4}>\r\n            <Panel style={{ height: '100vh'}} bordered></Panel>\r\n          </FlexboxGrid.Item>\r\n          <FlexboxGrid.Item colspan={20}>\r\n            <MapInteractionCSS style={{ overflow: 'hidden' }} translationBounds={{ xMin: -750, xMax: 750, yMin: -1000, yMax: 800 }} showControls={true} plusBtnContents={<Icon style={{ color: 'black' }} icon=\"plus\"/>} minusBtnContents={<Icon style={{ color: 'black' }} icon=\"minus\"/>}>\r\n              <Map handleClick={clickHandlerer} />          \r\n            </MapInteractionCSS>\r\n          </FlexboxGrid.Item>\r\n        </FlexboxGrid>\r\n\r\n\t\t\t</Content>\r\n\r\n\t\t\t<Modal size='md' backdrop='static' show={boolean} onHide={() => setBoolean(false)} >\r\n\t\t\t  <Modal.Header>\r\n            <Modal.Title>{territory.name}</Modal.Title>\r\n            <FlexboxGrid>\r\n              <FlexboxGridItem colspan={12}>\r\n                Borough: {territory.borough}\r\n              </FlexboxGridItem>\r\n              <FlexboxGridItem colspan={12}>\r\n                Influence: {territory.influence}\r\n              </FlexboxGridItem>\r\n            </FlexboxGrid>\r\n        </Modal.Header>\r\n          <Modal.Body>\r\n            {territory.description}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={() => setBoolean(false)} appearance=\"subtle\">\r\n              Cancel\r\n            </Button>\r\n          </Modal.Footer>\r\n\t\t\t</Modal>\t\t\r\n\t\t</Container>\r\n\r\n\r\n\t);\r\n\t\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tlocations: state.locations.list,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MapContainer);\r\n\r\n//<img src={\"https://i.ytimg.com/vi/flD5ZTC3juk/maxresdefault.jpg\"} width=\"700\" height=\"220\"/>","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\entities\\locations.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\homepage.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\HomePage.jsx",["209"],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\notFound.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\NotFound.jsx",["210","211","212","213","214","215","216","217","218"],"import React, { useEffect } from 'react';\r\nimport { Button, Content, FlexboxGrid, Header, Panel } from 'rsuite';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport socket from '../../socket';\r\nimport { connect } from 'react-redux';\r\n\r\nconst start = () => {\r\n  const data = {\r\n    hunger: 100, \r\n    happiness: 100, \r\n    discovered: true\r\n  };\r\n\r\n  socket.emit('actionRequest', 'easterEgg', data ); // new Socket event\r\n  socket.emit('actionRequest', 'create', data); // new Socket event\r\n  console.log('hi');\r\n}\r\n\r\nconst NotFound = (props) => {\r\n  const [seconds, setSeconds] = React.useState(25);\r\n  const [startBool, setStart] = React.useState(false);\r\n\tconst history = useHistory()\r\n\r\n  const test = () => {}\r\n\r\n  return ( \r\n\t\t<React.Fragment>\r\n      <Panel style={{ height: '50vh'}} bordered>\r\n        <FlexboxGrid>\r\n          <FlexboxGrid.Item colspan={8}/>\r\n          <FlexboxGrid.Item colspan={8}>\r\n            <img width='400' src=\"/images/Bitsy.gif\" alt=\"oops\"/>\r\n          </FlexboxGrid.Item>\r\n          <FlexboxGrid.Item colspan={8}/>\r\n        </FlexboxGrid>        \r\n      </Panel>\r\n        <Button onClick={() => start()} >Feed</Button>\r\n        <Button>Play</Button>\r\n      <Panel>\r\n        \r\n      </Panel>\r\n\r\n    </React.Fragment>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tlocations: state.locations.list,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NotFound);",{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":4,"column":10,"nodeType":"225","messageId":"226","endLine":4,"endColumn":31},{"ruleId":"223","severity":1,"message":"227","line":3,"column":8,"nodeType":"225","messageId":"226","endLine":3,"endColumn":13},{"ruleId":"223","severity":1,"message":"228","line":3,"column":72,"nodeType":"225","messageId":"226","endLine":3,"endColumn":78},{"ruleId":"223","severity":1,"message":"229","line":409,"column":9,"nodeType":"225","messageId":"226","endLine":409,"endColumn":17},{"ruleId":"223","severity":1,"message":"230","line":15,"column":12,"nodeType":"225","messageId":"226","endLine":15,"endColumn":18},{"ruleId":"223","severity":1,"message":"231","line":15,"column":20,"nodeType":"225","messageId":"226","endLine":15,"endColumn":29},{"ruleId":"223","severity":1,"message":"232","line":5,"column":27,"nodeType":"225","messageId":"226","endLine":5,"endColumn":39},{"ruleId":"223","severity":1,"message":"233","line":3,"column":38,"nodeType":"225","messageId":"226","endLine":3,"endColumn":45},{"ruleId":"223","severity":1,"message":"234","line":3,"column":142,"nodeType":"225","messageId":"226","endLine":3,"endColumn":146},{"ruleId":"223","severity":1,"message":"235","line":3,"column":148,"nodeType":"225","messageId":"226","endLine":3,"endColumn":157},{"ruleId":"223","severity":1,"message":"236","line":3,"column":159,"nodeType":"225","messageId":"226","endLine":3,"endColumn":171},{"ruleId":"223","severity":1,"message":"237","line":3,"column":173,"nodeType":"225","messageId":"226","endLine":3,"endColumn":184},{"ruleId":"223","severity":1,"message":"238","line":6,"column":9,"nodeType":"225","messageId":"226","endLine":6,"endColumn":15},{"ruleId":"223","severity":1,"message":"239","line":1,"column":17,"nodeType":"225","messageId":"226","endLine":1,"endColumn":26},{"ruleId":"223","severity":1,"message":"240","line":3,"column":30,"nodeType":"225","messageId":"226","endLine":3,"endColumn":36},{"ruleId":"223","severity":1,"message":"241","line":3,"column":59,"nodeType":"225","messageId":"226","endLine":3,"endColumn":69},{"ruleId":"223","severity":1,"message":"242","line":3,"column":78,"nodeType":"225","messageId":"226","endLine":3,"endColumn":83},{"ruleId":"223","severity":1,"message":"243","line":3,"column":85,"nodeType":"225","messageId":"226","endLine":3,"endColumn":89},{"ruleId":"223","severity":1,"message":"244","line":3,"column":91,"nodeType":"225","messageId":"226","endLine":3,"endColumn":101},{"ruleId":"223","severity":1,"message":"245","line":3,"column":103,"nodeType":"225","messageId":"226","endLine":3,"endColumn":108},{"ruleId":"223","severity":1,"message":"246","line":3,"column":110,"nodeType":"225","messageId":"226","endLine":3,"endColumn":116},{"ruleId":"223","severity":1,"message":"247","line":3,"column":118,"nodeType":"225","messageId":"226","endLine":3,"endColumn":131},{"ruleId":"223","severity":1,"message":"248","line":3,"column":140,"nodeType":"225","messageId":"226","endLine":3,"endColumn":151},{"ruleId":"223","severity":1,"message":"249","line":11,"column":9,"nodeType":"225","messageId":"226","endLine":11,"endColumn":15},{"ruleId":"223","severity":1,"message":"250","line":11,"column":17,"nodeType":"225","messageId":"226","endLine":11,"endColumn":26},{"ruleId":"223","severity":1,"message":"251","line":15,"column":8,"nodeType":"225","messageId":"226","endLine":15,"endColumn":15},{"ruleId":"223","severity":1,"message":"252","line":8,"column":8,"nodeType":"225","messageId":"226","endLine":8,"endColumn":12},{"ruleId":"223","severity":1,"message":"239","line":1,"column":17,"nodeType":"225","messageId":"226","endLine":1,"endColumn":26},{"ruleId":"223","severity":1,"message":"233","line":2,"column":18,"nodeType":"225","messageId":"226","endLine":2,"endColumn":25},{"ruleId":"223","severity":1,"message":"228","line":2,"column":40,"nodeType":"225","messageId":"226","endLine":2,"endColumn":46},{"ruleId":"223","severity":1,"message":"253","line":20,"column":10,"nodeType":"225","messageId":"226","endLine":20,"endColumn":17},{"ruleId":"223","severity":1,"message":"254","line":20,"column":19,"nodeType":"225","messageId":"226","endLine":20,"endColumn":29},{"ruleId":"223","severity":1,"message":"255","line":21,"column":10,"nodeType":"225","messageId":"226","endLine":21,"endColumn":19},{"ruleId":"223","severity":1,"message":"256","line":21,"column":21,"nodeType":"225","messageId":"226","endLine":21,"endColumn":29},{"ruleId":"223","severity":1,"message":"251","line":22,"column":8,"nodeType":"225","messageId":"226","endLine":22,"endColumn":15},{"ruleId":"223","severity":1,"message":"257","line":24,"column":9,"nodeType":"225","messageId":"226","endLine":24,"endColumn":13},"no-native-reassign",["258"],"no-negated-in-lhs",["259"],"no-unused-vars","'playerActionsReceived' is defined but never used.","Identifier","unusedVar","'store' is defined but never used.","'Header' is defined but never used.","'filtered' is assigned a value but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'getMyActions' is defined but never used.","'Content' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'ControlLabel' is defined but never used.","'FormControl' is defined but never used.","'Circle' is assigned a value but never used.","'useEffect' is defined but never used.","'Footer' is defined but never used.","'PanelGroup' is defined but never used.","'Input' is defined but never used.","'List' is defined but never used.","'RadioGroup' is defined but never used.","'Radio' is defined but never used.","'Toggle' is defined but never used.","'ButtonToolbar' is defined but never used.","'ButtonGroup' is defined but never used.","'filter' is assigned a value but never used.","'setFilter' is assigned a value but never used.","'history' is assigned a value but never used.","'aang' is defined but never used.","'seconds' is assigned a value but never used.","'setSeconds' is assigned a value but never used.","'startBool' is assigned a value but never used.","'setStart' is assigned a value but never used.","'test' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]