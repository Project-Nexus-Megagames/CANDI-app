[{"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\index.js":"1","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\App.js":"2","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\reportWebVitals.js":"3","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\store.js":"4","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\initUpdate.js":"5","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\socket.js":"6","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\configureStore.js":"7","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\entities\\characters.js":"8","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\entities\\gamestate.js":"9","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\entities\\assets.js":"10","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\entities\\playerActions.js":"11","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\config.js":"12","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\reducer.js":"13","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\api.js":"14","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\middleware\\toast.js":"15","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\middleware\\api.js":"16","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\entities\\auth.js":"17","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Actions\\Actions.jsx":"18","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Control\\ControlTerminal.jsx":"19","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\navigationBar.jsx":"20","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\Login.jsx":"21","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Control\\control.jsx":"22","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\MyCharacters\\myCharacter.jsx":"23","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\OtherCharacters\\OtherCharacters.jsx":"24","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Actions\\NewAction.jsx":"25","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Actions\\ActionList.jsx":"26","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Actions\\SelectedAction.jsx":"27","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Actions\\SelectedProject.jsx":"28","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\loading.jsx":"29","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\OtherCharacters\\ModifyCharacter.jsx":"30","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\OtherCharacters\\AddAsset.jsx":"31","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\OtherCharacters\\ModifyMemory.jsx":"32","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\NoCharacter.jsx":"33","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\ImgPanel.jsx":"34","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\NavigationBar.jsx":"35","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\navigation\\Map.jsx":"36","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\Map.jsx":"37","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\Test.jsx":"38","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\entities\\locations.js":"39","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\homepage.jsx":"40","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\HomePage.jsx":"41","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\notFound.jsx":"42","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\NotFound.jsx":"43"},{"size":714,"mtime":1617911040854,"results":"44","hashOfConfig":"45"},{"size":4570,"mtime":1619064143868,"results":"46","hashOfConfig":"45"},{"size":375,"mtime":1617911040854,"results":"47","hashOfConfig":"45"},{"size":151,"mtime":1617911040854,"results":"48","hashOfConfig":"45"},{"size":3688,"mtime":1617911638061,"results":"49","hashOfConfig":"45"},{"size":537,"mtime":1617911638062,"results":"50","hashOfConfig":"45"},{"size":509,"mtime":1617911040854,"results":"51","hashOfConfig":"45"},{"size":2525,"mtime":1617911638060,"results":"52","hashOfConfig":"45"},{"size":1952,"mtime":1617911638061,"results":"53","hashOfConfig":"45"},{"size":2683,"mtime":1617911638059,"results":"54","hashOfConfig":"45"},{"size":4288,"mtime":1618121022610,"results":"55","hashOfConfig":"45"},{"size":204,"mtime":1617911040854,"results":"56","hashOfConfig":"45"},{"size":535,"mtime":1618948823495,"results":"57","hashOfConfig":"45"},{"size":238,"mtime":1617911040854,"results":"58","hashOfConfig":"45"},{"size":183,"mtime":1617911040854,"results":"59","hashOfConfig":"45"},{"size":1018,"mtime":1617911040854,"results":"60","hashOfConfig":"45"},{"size":2612,"mtime":1617911638060,"results":"61","hashOfConfig":"45"},{"size":3989,"mtime":1619064180806,"results":"62","hashOfConfig":"45"},{"size":13476,"mtime":1618165465529,"results":"63","hashOfConfig":"45"},{"size":2313,"mtime":1619063852906,"results":"64","hashOfConfig":"45"},{"size":3070,"mtime":1617911638057,"results":"65","hashOfConfig":"45"},{"size":5556,"mtime":1617911638050,"results":"66","hashOfConfig":"45"},{"size":14303,"mtime":1619064180806,"results":"67","hashOfConfig":"45"},{"size":10612,"mtime":1619064180806,"results":"68","hashOfConfig":"45"},{"size":5322,"mtime":1618121665140,"results":"69","hashOfConfig":"45"},{"size":2803,"mtime":1617911638047,"results":"70","hashOfConfig":"45"},{"size":12336,"mtime":1618165465489,"results":"71","hashOfConfig":"45"},{"size":5721,"mtime":1618165465489,"results":"72","hashOfConfig":"45"},{"size":13610,"mtime":1617911638054,"results":"73","hashOfConfig":"45"},{"size":5283,"mtime":1617911638056,"results":"74","hashOfConfig":"45"},{"size":3092,"mtime":1617911638055,"results":"75","hashOfConfig":"45"},{"size":5560,"mtime":1617911638056,"results":"76","hashOfConfig":"45"},{"size":4503,"mtime":1617911638053,"results":"77","hashOfConfig":"45"},{"size":804,"mtime":1617912251786,"results":"78","hashOfConfig":"45"},{"size":2313,"mtime":1619063852906,"results":"79","hashOfConfig":"45"},{"size":431,"mtime":1617912724084,"results":"80","hashOfConfig":"45"},{"size":149092,"mtime":1619063847146,"results":"81","hashOfConfig":"45"},{"size":2977,"mtime":1619064180806,"results":"82","hashOfConfig":"45"},{"size":2484,"mtime":1618948805920,"results":"83","hashOfConfig":"45"},{"size":4790,"mtime":1619063754674,"results":"84","hashOfConfig":"45"},{"size":4790,"mtime":1619063754674,"results":"85","hashOfConfig":"45"},{"size":1470,"mtime":1619063808222,"results":"86","hashOfConfig":"45"},{"size":1470,"mtime":1619063808222,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1k1l37l",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\index.js",[],["185","186"],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\App.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\reportWebVitals.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\store.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\initUpdate.js",["187"],"import { assetAdded, assetDeleted, assetUpdated } from './entities/assets';\r\nimport { characterAdded, characterDeleted, characterUpdated } from './entities/characters';\r\nimport { gamestateReceived } from './entities/gamestate';\r\nimport { playerActionsReceived, playerActionUpdated, actionAdded, actionDeleted } from './entities/playerActions';\r\nimport socket from '../socket'\r\nimport store from './store';\r\n\r\nconst initUpdates = () => {\r\n    socket.on('updateClients', (data) => { \r\n        console.log('updateClients');\r\n        for (const el of data) {\r\n            switch(el.model) {\r\n                case 'Character':\r\n                    store.dispatch(characterUpdated(el));\r\n                    break;\r\n                case 'Action':\r\n                    store.dispatch(playerActionUpdated(el));\r\n                    break;\r\n                case 'Gamestate':\r\n                    store.dispatch(gamestateReceived(el));\r\n                    break;\r\n                case 'Asset':\r\n                    store.dispatch(assetUpdated(el));\r\n                    break;\r\n                default:\r\n                    console.log(`Unable to update Redux for ${el.model}: ${el._id}`);\r\n                    break;\r\n            }\r\n        }\r\n    });\r\n\r\n    socket.on('createClients', (data) => { \r\n        console.log('createClients');\r\n        for (const el of data) {\r\n            switch(el.model) {\r\n                case 'Character':\r\n                    store.dispatch(characterAdded(el));\r\n                    break;\r\n                case 'Action':\r\n                    store.dispatch(actionAdded(el));\r\n                    break;\r\n                case 'Gamestate':\r\n                    console.log('DEAR GOD IF YOU SEE THIS FUCKING CALL SCOTT OH GOD HOW COULD THIS HAPPEN')\r\n                    break;\r\n                case 'Asset':\r\n                    store.dispatch(assetAdded(el));\r\n                    break;\r\n                default:\r\n                    console.log(`Unable to add Redux for ${el.model}: ${el._id}`);\r\n                    break;\r\n            }\r\n        }\r\n    });\r\n\r\n    socket.on('deleteClients', (data) => { \r\n        console.log('deleteClients');\r\n        for (const el of data) {\r\n            switch(el.type) {\r\n                case 'character':\r\n                    store.dispatch(characterDeleted(el));\r\n                    break;\r\n                case 'action':\r\n                    store.dispatch(actionDeleted(el));\r\n                    break;\r\n                case 'Gamestate':\r\n                    console.log('DEAR GOD IF YOU SEE THIS FUCKING CALL SCOTT OH GOD HOW COULD THIS HAPPEN')\r\n                    break;\r\n                case 'asset':\r\n                    store.dispatch(assetDeleted(el));\r\n                    break;\r\n                default:\r\n                    console.log(`Unable to add Redux for ${el.type}: ${el.id}`);\r\n                    break;\r\n            }\r\n        }\r\n    });\r\n\r\n/*\tsocket.on('updateCharacters', (data) => { store.dispatch(charactersReceived(data)) });\r\n\tsocket.on('updateCharacter', (data) => { store.dispatch(characterUpdated(data)) });\r\n\r\n\r\n    socket.on('updateActions', (data) => { store.dispatch(playerActionsReceived(data)) });\r\n    socket.on('updateAction', (data) => { store.dispatch(playerActionUpdated(data)) });\r\n    socket.on('actionCreated', (data) => { store.dispatch(actionAdded(data)) });\r\n    socket.on('actionDeleted', (data) => { store.dispatch(actionDeleted(data)) });\r\n    \r\n    socket.on('updateGamestate', (data) => { store.dispatch(gamestateReceived(data)) });\r\n    socket.on('updateAssets', (data) => { store.dispatch(assetsReceived(data)) });\r\n    */\r\n}\r\n\r\n\r\n\r\nexport default initUpdates;","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\socket.js",["188"],"import { io } from \"socket.io-client\";\r\nimport { gameServer } from './config';\r\nimport store from \"./redux/store\";\r\n\r\nconst URL = gameServer;\r\nconst socket = io(URL, { autoConnect: false });\r\n\r\n// DEBUG event showing any event thrown over the socket in console\r\nsocket.onAny((event, ...args) => {\r\n  console.log(event, args);\r\n});\r\n\r\nexport function initConnection(user) {\r\n  console.log('Socket Connecting....')\r\n  socket.auth = { username: user.username }\r\n    \r\n  console.log(socket);\r\n  socket.connect();\r\n}\r\n\r\nexport default socket;","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\configureStore.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\entities\\characters.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\entities\\gamestate.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\entities\\assets.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\entities\\playerActions.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\config.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\reducer.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\api.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\middleware\\toast.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\middleware\\api.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\entities\\auth.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Actions\\Actions.jsx",["189"],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Control\\ControlTerminal.jsx",["190","191","192"],"import React, { Component } from 'react';\r\nimport { ButtonGroup, Content, InputNumber, InputPicker, Divider, Placeholder, Panel, Button, Icon, Modal, Form, FormGroup, FormControl, ControlLabel, FlexboxGrid, SelectPicker, TagPicker, DatePicker, Loader, Table } from 'rsuite';\r\nimport { connect } from 'react-redux';\r\nimport socket from '../../socket';\r\nimport { getMyCharacter } from '../../redux/entities/characters';\r\nimport { draftActions } from '../../redux/entities/playerActions';\r\n\r\nconst { Column, HeaderCell, Cell, Pagination } = Table;\r\nclass ControlTerminal extends Component {\r\n\tstate = { \r\n\t\tgsModal: false,\r\n\t\twarningModal: false,\r\n\t\twarning2Modal: false,\r\n\t\tassModal: false,\r\n\t\tprojectModal: false,\r\n\t\tformValue: {\r\n\t\t\tround: null,\r\n\t\t\tstatus: '',\r\n\t\t},\r\n\t\tendTime: null,\r\n\t\tprojName: '',\r\n\t\tprojDescription: '',\r\n\t\tprogress: 0,\r\n\t\tplayers: [],\r\n\t\timage: '',\r\n\r\n\t\tcharacters: [],\r\n\t\r\n\t\tdrafts: 0,\r\n\t\tawaiting: 0,\r\n\t\tready: 0,\r\n\t\tassets: [],\r\n\t\tselected: null,\r\n\t\tname: '',\r\n\t\tdescription: '',\r\n\t\tuses: 0, \r\n\t\tloading: false\r\n\t }\r\n\r\n\tcomponentDidMount = async () => {\r\n\t\tconst formValue = {\r\n\t\t\tround: this.props.gamestate.round, \r\n\t\t\tstatus: this.props.gamestate.status,\r\n\t\t\tendTime: this.props.gamestate.endTime\r\n\t\t}\r\n\r\n\t\tlet drafts = 0;\r\n\t\tlet awaiting= 0;\r\n\t\tlet ready = 0;\r\n\t\tfor (const action of this.props.actions) {\r\n\t\t\tif (action.status.draft === true) drafts++;\r\n\t\t\telse if (action.status.ready === true) ready++;\r\n\t\t\telse if (action.status.draft === false && action.status.ready === false && action.status.published === false) awaiting++;\r\n\t\t}\r\n\t\tthis.setState({ formValue, drafts, awaiting, ready, characters: {...this.props.characters} })\r\n\t}\r\n\r\n\tcomponentDidUpdate = async (prevProps) => {\r\n\t\tif (this.props.gamestate !== prevProps.gamestate || this.props.actions !== prevProps.actions) {\r\n\t\t\tconst formValue = {\r\n\t\t\t\tround: this.props.gamestate.round, \r\n\t\t\t\tstatus: this.props.gamestate.status\r\n\t\t\t}\r\n\t\t\tlet drafts = 0;\r\n\t\t\tlet awaiting= 0;\r\n\t\t\tlet ready = 0;\r\n\t\t\tconst copy = this.props.actions.filter(action => action.round === this.props.gamestate.round);\r\n\t\t\tlet tableData = [];\r\n\t\t\tfor (const action of copy) {\r\n\t\t\t\t\r\n\t\t\t\tif (action.status.draft === true && action.model !== \"Project\") drafts++;\r\n\t\t\t\telse if (action.status.ready === true) ready++;\r\n\t\t\t\telse if (action.status.draft === false && action.status.ready === false && action.status.published === false) awaiting++;\r\n\t\t\t}\r\n\t\t\tthis.setState({ formValue, drafts, awaiting, ready, endTime: this.props.gamestate.endTime })\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\trender() { \r\n\t\tif (!this.props.login) {\r\n\t\t\tthis.props.history.push('/');\r\n\t\t\treturn (<Loader inverse center content=\"doot...\" />)\r\n\t\t};\r\n\t\treturn ( \r\n\t\t\t<Content style={{style1}}>\r\n\t\t\t\t<div style={{height: '10vh'}} >\r\n\t\t\t\t\t<Divider>Scott's Message of the Day:</Divider>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h5>This update: All actions now operate on sockets.</h5>\r\n\t\t\t\t\t</div>\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{height: '15vh'}}>\r\n\t\t\t\t<FlexboxGrid>\r\n\t\t\t\t\t<FlexboxGrid.Item colspan={8}>\r\n\t\t\t\t\t\t<Panel bordered style={{backgroundColor: '#272b34'}} header='Drafts'> {this.state.drafts} </Panel>\r\n\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t<FlexboxGrid.Item colspan={8}>\r\n\t\t\t\t\t\t<Panel bordered style={{backgroundColor: '#272b34'}} header='Awaiting Resolution'> {this.state.awaiting} </Panel>\r\n\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t<FlexboxGrid.Item colspan={8}>\r\n\t\t\t\t\t\t<Panel bordered style={{backgroundColor: '#272b34'}} header='Ready for Publishing'> {this.state.ready} </Panel>\t\t\t\r\n\t\t\t\t\t</FlexboxGrid.Item>\t\t\t\t\t\r\n\t\t\t\t</FlexboxGrid>\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div  style={{height: '15vh'}}>\r\n\t\t\t\t\t<Divider>Editing</Divider>\r\n\t\t\t\t\t<Panel>\r\n\t\t\t\t\t\t<ButtonGroup >\r\n\t\t\t\t\t\t\t<Button appearance=\"ghost\" color='red' onClick={() => this.setState({ warningModal: true })}>Close Actions</Button>\r\n\t\t\t\t\t\t\t<Button appearance=\"ghost\" color='green' onClick={() => this.setState({ warning2Modal: true })}>Publish Resolutions</Button>\r\n\t\t\t\t\t\t\t<Button appearance=\"ghost\" disabled={this.isControl()} onClick={() => this.setState({ gsModal: true })} >Edit Game State</Button>\r\n\t\t\t\t\t\t\t<Button appearance=\"ghost\" onClick={() => this.setState({ assModal: true })}>Edit or Delete Asset/Trait</Button>\r\n\t\t\t\t\t\t\t<Button color='orange' appearance=\"ghost\" onClick={() => this.setState({ projectModal: true })}>New Project</Button>\r\n\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t</Panel>\r\n\t\t\t\t\t<Divider>Round {this.props.gamestate.round}</Divider>\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<Panel style={{height: '50vh'}}>\r\n\t\t\t\t\t<Table virtualized data={this.props.actions} >\r\n\t\t\t\t\t\t<Column>\r\n\t\t\t\t\t\t<HeaderCell>Character</HeaderCell>\r\n\t\t\t\t\t\t<Cell dataKey=\"description\" />\r\n\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</Panel>\r\n\r\n\t\t\t\t<Modal size='sm' show={this.state.gsModal} onHide={() => this.setState({ gsModal: false })} > \r\n\t\t\t\t\t<Form formValue={this.state.formValue} layout=\"center\" onChange={formValue => {this.setState({ formValue });}}>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<ControlLabel>Game State </ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl name=\"status\" data={pickerData} accepter={InputPicker} />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<ControlLabel>Round</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl name=\"round\" cleanable={false} accepter={InputNumber} />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<ControlLabel>End Time</ControlLabel>\r\n\t\t\t\t\t\t\t<DatePicker value={this.state.endTime} onChange={this.handleDate} format=\"YYYY-MM-DD HH:mm\"></DatePicker>\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t\t<Modal.Footer>\r\n        \t  <Button loading={this.state.loading} onClick={() => this.editGameState()} disabled={(this.state.formValue.status === null)} appearance=\"primary\">\r\n        \t    Submit\r\n        \t  </Button>\r\n        \t  <Button onClick={() => this.setState({ gsModal: false })} appearance=\"subtle\">\r\n        \t    Cancel\r\n         \t </Button>\r\n        </Modal.Footer>\r\n\t\t\t\t</Modal>\r\n\r\n\t\t\t\t<Modal backdrop='static' size='md' show={this.state.projectModal} onHide={() => this.setState({ projectModal: false })}>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tName\t\t\r\n\t\t\t\t</p> \r\n\t\t\t\t\t<textarea value={this.state.projName} style={textStyle} onChange={(event)=> this.setState({ projName: event.target.value })}></textarea>\t\r\n\t\t\t\t<p>\r\n\t\t\t\t\tDescription\t\t\r\n\t\t\t\t</p> \r\n\t\t\t\t<textarea rows='4' value={this.state.projDescription} style={textStyle} onChange={(event)=> this.setState({projDescription: event.target.value})}></textarea>\t\r\n\t\t\t\t<p>\r\n\t\t\t\t\tImage\r\n\t\t\t\t</p>\r\n\t\t\t\t<textarea value={this.state.image} style={textStyle} onChange={(event)=> this.setState({ image: event.target.value })}></textarea>\t\r\n\t\t\t\t<p>\r\n\t\t\t\t\tProgress\r\n\t\t\t\t</p>\r\n\t\t\t\t<InputNumber value={this.state.progress} onChange={(event)=> this.setState({progress: event})}></InputNumber>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tPlayers\r\n\t\t\t\t</p>\r\n\t\t\t\t\t<TagPicker data={this.props.characters} labelKey='characterName' valueKey='characterName' block onChange={(event)=> this.setState({ players: event })}></TagPicker>\r\n\t\t\t\t\t<Modal.Footer>\r\n        \t  <Button onClick={() => this.newProject()} appearance=\"primary\">\r\n        \t    Submit\r\n        \t  </Button>\r\n        \t  <Button onClick={() => this.setState({ projectModal: false })} appearance=\"subtle\">\r\n        \t    Cancel\r\n         \t </Button>\r\n        </Modal.Footer>\r\n\t\t\t\t</Modal>\r\n\t\t\r\n\t\t\t\t<Modal backdrop=\"static\" size='sm' show={this.state.warningModal} onHide={() => this.setState({ warningModal: false })}>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<Icon icon=\"remind\" style={{ color: '#ffb300', fontSize: 24 }}/>\r\n\t\t\t\t\t\t\t{'  '}\r\n\t\t\t\t\t\t\tWaring! Are you sure you want to close the round? This will lock down all actions.\r\n\t\t\t\t\t\t\t<Icon icon=\"remind\" style={{ color: '#ffb300', fontSize: 24 }}/>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t<Modal.Footer>\r\n            <Button onClick={() => this.closeDraft()} appearance=\"primary\">\r\n              I am Sure!\r\n            </Button>\r\n            <Button onClick={() => this.setState({ warningModal: false })} appearance=\"subtle\">\r\n              Nevermind\r\n            </Button>\r\n          </Modal.Footer>\r\n\t\t\t\t</Modal>\r\n\t\t\t\r\n\t\t\t\t<Modal backdrop=\"static\" size='sm' show={this.state.warning2Modal} onHide={() => this.setState({ warning2Modal: false })}>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<Icon icon=\"remind\" style={{ color: '#ffb300', fontSize: 24 }}/>\r\n\t\t\t\t\t\t\t{'  '}\r\n\t\t\t\t\t\t\tWaring! Are you sure you want to publish all actions? This will:\r\n\t\t\t\t\t\t\t<Icon icon=\"remind\" style={{ color: '#ffb300', fontSize: 24 }}/>\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\tMake all actions that are \"Ready for Publishing\" to \"Published\"\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\tRecall all Lent Assets to their owners\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\tPush the round to it's next number\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t<Modal.Footer>\r\n            <Button onClick={() => this.publishActions()} appearance=\"primary\">\r\n              I am Sure!\r\n            </Button>\r\n            <Button onClick={() => this.setState({ warning2Modal: false })} appearance=\"subtle\">\r\n              Nevermind\r\n            </Button>\r\n          </Modal.Footer>\r\n\t\t\t\t</Modal>\r\n\t\t\t\r\n\t\t\t\t<Modal size='sm' show={this.state.assModal} onHide={() => this.setState({ assModal: false })}>\r\n\t\t\t\t\t<SelectPicker block placeholder=\"Edit or Delete Asset/Trait\" onChange={(event) => this.handleChage(event)} data={this.props.assets.filter(el => el.model !== 'Wealth')} valueKey='_id' labelKey='name'></SelectPicker>\r\n\t\t\t\t\t\t{this.renderAss()}\r\n\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t{this.state.selected && \r\n\t\t\t\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t\t\t\t<Button loading={this.state.loading}  onClick={() => this.assetModify()} color=\"blue\">Edit</Button>\r\n\t\t\t\t\t\t\t\t<Button loading={this.state.loading}  onClick={() => this.handleDelete()} color=\"red\">Delete</Button>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ButtonGroup>}\r\n\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t</Modal>\r\n\t\t\t</Content>\r\n\t\t );\r\n\t}\r\n\r\n\thandleDate = (value) => {\r\n\t\tthis.setState({ endTime: value })\r\n\t}\r\n\r\n\thandleChage = (event) => {\r\n\t\tif (event) {\r\n\t\t\tconst selected = this.props.assets.find(el => el._id === event);\r\n\t\t\tthis.setState({ selected: event, name: selected.name, description: selected.description, uses: selected.uses })\t\t\t\r\n\t\t}\r\n\t\telse this.setState({ selected: '', name: '', description: '', uses: 0 })\t\t\t\r\n\t}\r\n\r\n\tassetModify = async () => {\r\n\t\tthis.setState({ loading: true });\r\n\t\tconst data = {\r\n\t\t\tid: this.state.selected,\r\n\t\t\tname: this.state.name,\r\n\t\t\tdescription: this.state.description,\r\n\t\t\tuses: this.state.uses\r\n\t\t}\r\n\t\tsocket.emit('assetRequest', 'modify', { data }); // new Socket event\t\r\n\t\tthis.setState({ assModal: false, selected: null, loading: false });\r\n\t}\r\n\r\n\trenderAss = () => {\r\n\t\tif (this.state.selected) {\r\n\t\t\treturn (\r\n\t\t\t\t<Panel>\r\n\t\t\t\t\tName:\r\n\t\t\t\t\t<textarea value={this.state.name} style={textStyle} onChange={(event)=> this.setState({ name: event.target.value })}></textarea>\t\r\n\t\t\t\t\tDescription:\r\n\t\t\t\t\t<textarea rows='4' value={this.state.description} style={textStyle} onChange={(event)=> this.setState({description: event.target.value})}></textarea>\t\r\n\t\t\t\t\tUses: <InputNumber value={this.state.uses} onChange={(event)=> this.setState({uses: event})}></InputNumber>\r\n\t\t\t\t</Panel>\t\t\t\r\n\t\t\t)\t\t\t\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn (\r\n\t\t\t\t<Placeholder.Paragraph rows={5} >Awaiting Selection</Placeholder.Paragraph>\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\thandleDelete = async () => {\r\n\t\tsocket.emit('assetRequest', 'delete', { id: this.state.selected }); // new Socket event\t\r\n\t}\r\n\r\n\teditGameState = async () => {\r\n\t\tconst data = {\r\n\t\t\tround: this.state.formValue.round,\r\n\t\t\tstatus: this.state.formValue.status,\r\n\t\t\tendTime: this.state.endTime\r\n\t\t}\r\n\t\tsocket.emit('gamestateRequest', 'modify', { data }); // new Socket event\t\r\n\t\tthis.setState({ gsModal: false });\r\n\t}\r\n\r\n\tcloseDraft = async () => {\r\n\t\tsocket.emit('gamestateRequest', 'closeRound', 'Hello'); // new Socket event\r\n\t\tthis.setState({ warningModal: false });\r\n\t}\r\n\r\n\tpublishActions = async () => {\r\n\t\tsocket.emit('gamestateRequest', 'nextRound', 'Hello'); // new Socket event\r\n\t\tthis.setState({ warning2Modal: false });\t\r\n\t}\r\n\r\n\tnewProject = async () => {\r\n\t\tconst data = {\r\n\t\t\tdescription: this.state.projName,\r\n\t\t\tintent: this.state.projDescription,\r\n\t\t\teffort: 0,\r\n\t\t\tprogress: this.state.progress,\r\n\t\t\tmodel: \"Project\",\r\n\t\t\tplayers: this.state.players,\r\n\t\t\tcreator: this.props.playerCharacter,\r\n\t\t\tround: this.props.gamestate.round, \r\n\t\t\timage: this.state.image,\r\n\t\t\tstatus: {\r\n\t\t\t\tdraft: false,\r\n\t\t\t\tpublished: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tsocket.emit('actionRequest', 'create', { data: data }); // new Socket event\r\n\t}\r\n\r\n\tisControl () {\r\n\t\tif (this.props.user.roles.some(el => el === \"Control\")) return false;\r\n\t\telse return true;\r\n\t}\r\n\r\n\tfilterAssets () {\r\n\t\tconst filtered = this.props.assets.filter(el => el.modal !== 'Wealth')\r\n\t}\r\n\t\r\n}\r\n \r\nconst style1 = {\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n};\r\n\r\nconst pickerData = [\r\n\t{\r\n\t\tlabel: 'Active',\r\n\t\tvalue: 'Active'\r\n\t},\r\n\t{\r\n\t\tlabel: 'Resolution',\r\n\t\tvalue: 'Resolution'\r\n\t},\r\n\t{\r\n\t\tlabel: 'Down',\r\n\t\tvalue: 'Down'\r\n\t},\r\n]\r\n\r\nconst textStyle = {\r\n\tbackgroundColor: '#1a1d24', \r\n\tborder: '1.5px solid #3c3f43', \r\n\tborderRadius: '5px', \r\n\twidth: '100%',\r\n\tpadding: '5px',\r\n\toverflow: 'auto', \r\n\tscrollbarWidth: 'none',\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tuser: state.auth.user,\r\n\tassets: state.assets.list,\r\n\tlogin: state.auth.login,\r\n\tgamestate: state.gamestate,\r\n\tcharacters: state.characters.list,\r\n\tactions: state.actions.list,\r\n\tdraftActions: draftActions(state),\r\n\tplayerCharacter: state.auth.user ? getMyCharacter(state) : undefined\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ControlTerminal);\r\n","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\navigationBar.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\Login.jsx",["193","194"],"import React, { useEffect } from 'react'; // React imports\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button, ControlLabel, Form, FormControl, FormGroup, Modal, Schema } from 'rsuite';\r\nimport { loadAssets } from '../../redux/entities/assets';\r\nimport { authReceived, loginUser } from '../../redux/entities/auth';\r\nimport { loadCharacters } from '../../redux/entities/characters';\r\nimport { loadGamestate } from '../../redux/entities/gamestate';\r\nimport { loadplayerActions } from '../../redux/entities/playerActions';\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nconst Login = props => {\r\n\tlet { login, tokenLogin, loadAction, user } = props;\r\n    const [errors, setErrors] = React.useState({});\r\n    const [formValue, setFormValue] = React.useState({ email: '', password: '',});\r\n\r\n\tconst history = useHistory();\r\n\t\r\n\t// console.log('Mounting App...')\r\n\t\r\n\r\n\tuseEffect(() => {\r\n\t\tlet token = localStorage.getItem('token');\r\n\t\tif (token && login === false) {\r\n\t\t\ttokenLogin(token);\r\n\t\t} \r\n\t}, [login, tokenLogin])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (login) {\r\n\t\t\tloadAction(user);\r\n\t\t\thistory.push('/home');\r\n\t\t}\r\n\t}, [login, user, loadAction, history])\r\n\r\n\r\n\r\n    return ( \r\n\t\t<Modal backdrop=\"static\" show={true}>\r\n\t\t<Modal.Header>\r\n\t\t\t<Modal.Title>Login</Modal.Title>\r\n\t\t</Modal.Header>\r\n\t\t<Modal.Body>\r\n\t\t\t<Form model={model} fluid formValue={formValue} onChange={form => setFormValue(form)}>\r\n\t\t\t<FormGroup>\r\n\t\t\t\t\t<ControlLabel>Email / Username</ControlLabel>\r\n\t\t\t\t\t<FormControl errorMessage={props.error} errorPlacement='topEnd' name=\"email\" accepter={model.accepter}/>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<ControlLabel>Password</ControlLabel>\r\n\t\t\t\t\t<FormControl errorMessage={props.error} errorPlacement='topEnd' name=\"password\" type=\"password\" />\r\n\t\t\t\t</FormGroup>\r\n\t\t\t</Form>\r\n\t\t</Modal.Body>\r\n\t\t<Modal.Footer>\r\n\t\t\t<Button loading={props.loading} onClick={() => {\r\n                props.handleLogin({ user: formValue.email, password: formValue.password })\r\n                }} appearance=\"primary\">\r\n\t\t\t\tSubmit\r\n\t\t\t</Button>\r\n\t\t</Modal.Footer>\r\n\t</Modal> \r\n\t);\r\n}\r\n\r\nconst model = Schema.Model({\r\n    email: StringType()\r\n    .isRequired('This field is required.')\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tauth: state.auth,\r\n\tlogin: state.auth.login,\r\n\terror: state.auth.error,\r\n\tuser: state.auth.user,\r\n\tloading: state.auth.loading,\r\n\tactionsLast: state.actions.lastFetch,\r\n\tassetsLast: state.assets.lastFetch,\r\n\tcharactersLast: state.characters.lastFetch,\r\n\tgamestateLast: state.gamestate.lastFetch,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\thandleLogin: (data) => dispatch(loginUser(data)),\r\n\ttokenLogin: (data) => dispatch(authReceived(data)),\r\n\tloadChar: (data) => dispatch(loadCharacters()),\r\n\tloadAction: (data) => dispatch(loadplayerActions(data)),\r\n\tloadAssets: (data) => dispatch(loadAssets()),\r\n\tloadGamestate: (data) => dispatch(loadGamestate())\r\n\t// updateUser: (user) => dispatch(updateUser({ user }))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Control\\control.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\MyCharacters\\myCharacter.jsx",["195","196","197","198","199"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  FlexboxGrid,\r\n  Loader,\r\n  Panel,\r\n  IconButton,\r\n  Icon,\r\n  Form,\r\n  FormGroup,\r\n  Button,\r\n  ButtonToolbar,\r\n  FormControl,\r\n  ControlLabel,\r\n  Divider,\r\n  Content,\r\n  Affix,\r\n  Tag,\r\n  Modal,\r\n  Drawer,\r\n  SelectPicker,\r\n  Placeholder,\r\n  Alert,\r\n  Grid,\r\n  Col,\r\n  Row,\r\n} from \"rsuite\";\r\nimport { gameServer } from \"../../config\";\r\nimport { getMyCharacter } from \"../../redux/entities/characters\";\r\nimport { assetLent, assetUpdated } from \"../../redux/entities/assets\";\r\nimport socket from \"../../socket\";\r\nimport { playerActionsRequested } from \"../../redux/entities/playerActions\";\r\nimport PlaceholderParagraph from \"rsuite/lib/Placeholder/PlaceholderParagraph\";\r\nimport NavigationBar from \"../Navigation/navigationBar\";\r\n\r\nclass MyCharacter extends Component {\r\n  state = {\r\n    formValue: {\r\n      textarea: \"\",\r\n    },\r\n    memory: \"\",\r\n    show: false,\r\n    lending: null,\r\n    target: null,\r\n    characters: null,\r\n    lendShow: false,\r\n    unlend: false, // boolean for displaying the \"unlend\" modal\r\n    unleanding: null, // what is being \"Unlent\"\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    const char = this.props.myCharacter;\r\n    // console.log(this.props.character)\r\n    if (char !== undefined) {\r\n      const formValue = {\r\n        textarea: char.standingOrders,\r\n      };\r\n      const characters = { ...this.props.characters };\r\n      this.setState({ formValue, characters });\r\n    }\r\n  };\r\n\r\n  /*componentDidUpdate = (prevProps) => {\r\n\t if (this.props.playerCharacter !== prevProps.playerCharacter) {\r\n\t\t const char = this.props.playerCharacter;\r\n\t\t const formValue = {\r\n\t\t\ttextarea: char.standingOrders,\r\n\t\t}\r\n\t this.setState({ formValue });\t\t\r\n\t }\r\n\t}*/\r\n\r\n  openAnvil(url) {\r\n    const win = window.open(url, \"_blank\");\r\n    win.focus();\r\n  }\r\n\r\n  showMemory = (memory) => {\r\n    this.setState({ memory, show: true });\r\n  };\r\n\r\n  openLend = (lending) => {\r\n    this.setState({ lending, lendShow: true });\r\n  };\r\n\r\n  closeLend = () => {\r\n    this.setState({ lendShow: false });\r\n  };\r\n\r\n  openUnlend = (unleanding) => {\r\n    this.setState({ unleanding, unlend: true });\r\n  };\r\n\r\n  render() {\r\n    const playerCharacter = this.props.myCharacter;\r\n    if (!this.props.login) {\r\n      this.props.history.push(\"/\");\r\n      return <Loader inverse center content=\"doot...\" />;\r\n    }\r\n    return (\r\n      <Content style={{ overflow: \"auto\", height: \"calc(100vh - 100px)\" }}>\r\n      <NavigationBar/>\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={8} className=\"gridbox\">\r\n              <div>\r\n              <p>\r\n                  <img\r\n                    class=\"portrait\"\r\n                    src={`/images/${playerCharacter.characterName}.jpg`}\r\n                    alt=\"Unable to load img\"\r\n                    width=\"95%\"\r\n                    height=\"320\"\r\n                  />\r\n                </p>\r\n                <p>\r\n                  <b>{playerCharacter.characterName}</b> {playerCharacter.tag}\r\n                </p>\r\n                <p>\r\n                  <b>\r\n                    World Anvil Link{\" \"}\r\n                    <IconButton\r\n                      onClick={() => this.openAnvil(playerCharacter.worldAnvil)}\r\n                      icon={<Icon icon=\"link\" />}\r\n                      appearance=\"primary\"\r\n                    />\r\n                  </b>\r\n                </p>\r\n                <p>\r\n                  <b>Bio:</b> {playerCharacter.bio}\r\n                </p>\r\n                <Panel header=\"Standing Orders\" style={{ width: \"95%\" }}>\r\n                <Form\r\n                  fluid\r\n                  formValue={this.state.formValue}\r\n                  onChange={(value) => this.setState({ formValue: value })}\r\n                >\r\n                  <FormGroup>\r\n                    <ControlLabel></ControlLabel>\r\n                    <FormControl\r\n                      name=\"textarea\"\r\n                      componentClass=\"textarea\"\r\n                      placeholder=\"Orders for if you miss a turn...\"\r\n                    />\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <ButtonToolbar>\r\n                      <Button\r\n                        appearance=\"primary\"\r\n                        onClick={() => this.handleStanding()}\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </ButtonToolbar>\r\n                  </FormGroup>\r\n                </Form>\r\n              </Panel>\r\n              </div>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={8} className=\"gridbox\">\r\n              <PlaceholderParagraph>Character shit goes here</PlaceholderParagraph>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={8} className=\"gridbox\">\r\n            <Divider >Wealth</Divider>\r\n              <Panel\r\n                style={{\r\n                  backgroundColor: \"#bfb606\",\r\n                  textAlign: \"center\",\r\n                  backgroundSize: '650px',\r\n                  backgroundImage: 'url(\"/images/coin.png\")'\r\n                }}\r\n                shaded\r\n                bordered\r\n              >\r\n                <h4 style={{ color: \"black\" }}>\r\n                  {playerCharacter.wealth.description}\r\n                </h4>\r\n                <b style={{ color: \"black\" }}>\r\n                  Uses: {playerCharacter.wealth.uses}\r\n                </b>\r\n\r\n                {playerCharacter.wealth.status.lent && (\r\n                  <b style={{ color: \"black\", fontSize: \"1.35em\" }}>\r\n                    Wealth lent to: '{playerCharacter.wealth.currentHolder}'\r\n                  </b>\r\n                )}\r\n                <div>\r\n                  {!playerCharacter.wealth.status.lent && (\r\n                    <Button\r\n                      onClick={() => this.openLend(playerCharacter.wealth)}\r\n                      color=\"blue\"\r\n                      size=\"sm\"\r\n                    >\r\n                      Lend\r\n                    </Button>\r\n                  )}\r\n                  {playerCharacter.wealth.status.lent && (\r\n                    <Button\r\n                      onClick={() => this.openUnlend(playerCharacter.wealth)}\r\n                      color=\"blue\"\r\n                      size=\"sm\"\r\n                    >\r\n                      Un-Lend\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n              </Panel>\r\n \r\n              <Divider style={{ marginBottom: \"0px\" }}>\r\n                Traits\r\n              </Divider>\r\n              {playerCharacter.traits.map((trait, index) => (\r\n                <div key={index} style={{ paddingTop: \"10px\" }}>\r\n                  {trait.uses > 0 && (\r\n                    <React.Fragment>\r\n                      <Panel\r\n                        style={{ backgroundColor: \"#1a1d24\" }}\r\n                        shaded\r\n                        header={trait.name}\r\n                        bordered\r\n                        collapsible\r\n                      >\r\n                        <p>{trait.description}</p>\r\n\r\n                        {trait.uses !== 999 && <p>Uses: {trait.uses}</p>}\r\n                      </Panel>\r\n                    </React.Fragment>\r\n                  )}\r\n                </div>\r\n              ))}\r\n              <Divider style={{ marginTop: \"15px\", marginBottom: \"0px\" }}>\r\n                Assets\r\n              </Divider>\r\n              {playerCharacter.assets.map((asset, index) => (\r\n                <div key={index} style={{ paddingTop: \"10px\" }}>\r\n                  {asset.uses > 0 && (\r\n                    <React.Fragment>\r\n                      <Affix>\r\n                        {asset.status.lent && this.rednerHolder(asset)}\r\n                        {!asset.status.lent && <Tag color=\"green\">Ready</Tag>}\r\n                      </Affix>\r\n                      <Panel\r\n                        style={{ backgroundColor: \"#1a1d24\" }}\r\n                        shaded\r\n                        header={asset.name}\r\n                        bordered\r\n                        collapsible\r\n                      >\r\n                        <FlexboxGrid>\r\n                          <FlexboxGrid.Item colspan={20}>\r\n                            <p>{asset.description}</p>\r\n                          </FlexboxGrid.Item>\r\n                          <FlexboxGrid.Item\r\n                            style={{ textAlign: \"center\" }}\r\n                            colspan={4}\r\n                          >\r\n                            {!asset.status.lent && (\r\n                              <Button\r\n                                onClick={() => this.openLend(asset)}\r\n                                appearance=\"ghost\"\r\n                                size=\"sm\"\r\n                              >\r\n                                Lend\r\n                              </Button>\r\n                            )}\r\n                            {asset.status.lent && (\r\n                              <Button\r\n                                onClick={() => this.openUnlend(asset)}\r\n                                appearance=\"ghost\"\r\n                                size=\"sm\"\r\n                              >\r\n                                Un-Lend\r\n                              </Button>\r\n                            )}\r\n                          </FlexboxGrid.Item>\r\n                        </FlexboxGrid>\r\n                        {asset.uses !== 999 && <p>Uses: {asset.uses}</p>}\r\n                      </Panel>\r\n                    </React.Fragment>\r\n                  )}\r\n                </div>\r\n              ))}\r\n             <Divider style={{ marginTop: \"15px\", marginBottom: \"0px\" }}>\r\n                Borrowed Assets\r\n              </Divider>\r\n              {playerCharacter.lentAssets.map((borrowed, index) => (\r\n                <div key={index} style={{ paddingTop: \"10px\" }}>\r\n                  <Affix>\r\n                    {borrowed.status.lent && this.findOwner(borrowed._id)}\r\n                  </Affix>\r\n                  <Panel shaded header={borrowed.name} bordered collapsible>\r\n                    <p>{borrowed.description}</p>\r\n                  </Panel>\r\n                </div>\r\n              ))}\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </Content>\r\n    );\r\n  }\r\n\r\n  rednerHolder = (asset) => {\r\n    const holder = this.props.characters.find((el) =>\r\n      el.lentAssets.some((el2) => el2._id === asset._id)\r\n    );\r\n    return <Tag color=\"violet\">Lent to: {holder.characterName}</Tag>;\r\n  };\r\n\r\n  findOwner = (id) => {\r\n    for (const character of this.props.characters) {\r\n      if (\r\n        character.assets.some((el) => el._id === id) ||\r\n        character.traits.some((el) => el._id === id)\r\n      ) {\r\n        return <Tag color=\"blue\">Borrowed from: {character.characterName}</Tag>;\r\n      }\r\n    }\r\n    return <Tag color=\"blue\">Borrowed from: ???</Tag>;\r\n  };\r\n\r\n  renderLendation = () => {\r\n    if (this.state.target === null || this.state.target === undefined) {\r\n      return (\r\n        <Placeholder.Paragraph rows={15}>\r\n          Awaiting Selection\r\n        </Placeholder.Paragraph>\r\n      );\r\n    } else {\r\n      const target = this.props.characters.find(\r\n        (el) => el._id === this.state.target\r\n      );\r\n      return (\r\n        <div>\r\n          <Divider\r\n            style={{ textAlign: \"center\", fontWeight: \"bolder\", fontSize: 20 }}\r\n          >\r\n            {target.characterName}, {target.tag}\r\n          </Divider>\r\n          <p>{target.bio}</p>\r\n          <Divider></Divider>\r\n          <p style={{ fontWeight: \"bolder\", fontSize: 20 }}>\r\n            Are you sure you want to lend your '{this.state.lending.name}' to\r\n            this person?{\" \"}\r\n          </p>\r\n          <Button\r\n            onClick={() => this.handleSubmit()}\r\n            disabled={\r\n              this.state.target === null || this.state.target === undefined\r\n            }\r\n            appearance=\"primary\"\r\n          >\r\n            Lend\r\n          </Button>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  renderUnLendation = () => {\r\n    if (this.state.unleanding === null) {\r\n      return (\r\n        <Placeholder.Paragraph rows={15}>\r\n          Awaiting Selection\r\n        </Placeholder.Paragraph>\r\n      );\r\n    } else {\r\n      return (\r\n        <p>\r\n          Are you sure you want to take back your {this.state.unleanding.name}{\" \"}\r\n          from {this.state.unleanding.currentHolder}?\r\n        </p>\r\n      );\r\n    }\r\n  };\r\n\r\n  handleSubmit = async () => {\r\n    const data = {\r\n      id: this.state.lending._id,\r\n      target: this.state.target,\r\n      lendingBoolean: true,\r\n    };\r\n    \r\n    socket.emit('characterRequest', 'lend', { data }); // new Socket event\r\n    this.setState({ lending: null, target: null });\r\n    this.closeLend();\r\n  };\r\n\r\n  handleTakeback = async () => {\r\n    const holder = this.props.characters.find((el) =>\r\n      el.lentAssets.some((el2) => el2._id === this.state.unleanding._id)\r\n    );\r\n\r\n    const data = {\r\n      id: this.state.unleanding._id,\r\n      target: holder._id,\r\n      lendingBoolean: false,\r\n    };\r\n    socket.emit('characterRequest', 'lend', { data }); // new Socket event\r\n  };\r\n\r\n  handleStanding = async () => {\r\n    const char = this.props.myCharacter;\r\n    const data = {\r\n      characterName: char.characterName,\r\n      email: char.email,\r\n      worldAnvil: char.worldAnvil,\r\n      tag: char.tag,\r\n      timeZone: char.timeZone,\r\n      playerName: char.playerName,\r\n      bio: char.bio,\r\n      uses: char.wealth.uses,\r\n      wealth: char.wealth.description,\r\n      icon: char.icon,\r\n      popSupport: char.popSupport,\r\n      standing: this.state.formValue.textarea,\r\n      id: char._id\r\n  }\r\n    socket.emit('characterRequest', 'modify', data ); // new Socket event\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  login: state.auth.login,\r\n  user: state.auth.user,\r\n  assets: state.assets.list,\r\n  characters: state.characters.list,\r\n  myCharacter: state.auth.user ? getMyCharacter(state) : undefined,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateAsset: (data) => dispatch(assetUpdated(data)),\r\n  lendAsset: (data) => dispatch(assetLent(data)),\r\n  actionDispatched: (data) => dispatch(playerActionsRequested(data))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyCharacter);\r\n","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\OtherCharacters\\OtherCharacters.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Actions\\NewAction.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Actions\\ActionList.jsx",["200"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {List, FlexboxGrid, Container, } from 'rsuite';\r\nimport { getMyCharacter } from '../../redux/entities/characters';\r\nimport { filteredActions, getMyActions } from '../../redux/entities/playerActions';\r\n\r\nclass ActionList extends Component {\r\n\tstate = { \r\n\t\trounds: []\r\n\t }\r\n\r\n\t componentDidMount = async () => {\r\n\t\t try {\r\n\t\t\tthis.createListCatagories();\r\n\t\t }\r\n\t\t catch (err) {\r\n\t\t\t console.log(err);\r\n\t\t }\r\n\t\t}\r\n\r\n\t\tcomponentDidUpdate = (prevProps) => {\r\n\t\t\tif (this.props.filteredActions !== prevProps.filteredActions) {\r\n\t\t\t\tthis.createListCatagories();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\tlistStyle (item) {\r\n\t\tif (item.model === \"Project\") {\r\n\t\t\treturn ({cursor: 'pointer', backgroundColor: \"#274472\", textAlign: \"center\", flexDirection: 'column', alignItems: 'center'})\r\n\t\t}\r\n\t\telse if (item === this.props.selected) {\r\n\t\t\treturn ({cursor: 'pointer', backgroundColor: \"#212429\"})\r\n\t\t}\r\n\t\telse return({cursor: 'pointer'});\r\n\t}\r\n\r\n\tcreateListCatagories = () => {\r\n\t\tconst rounds = [];\r\n\t\tfor (const action of this.props.filteredActions) {\r\n\t\t\tif (!rounds.some(el => el === action.round)) rounds.push(action.round);\r\n\t\t}\r\n\t\trounds.reverse();\r\n\t\tthis.setState({ rounds });\r\n\t}\r\n\r\n\trender() { \r\n\t\treturn ( \r\n\t\t\t<Container>\r\n\t\t\t\t{this.state.rounds.map((round, index) => (\r\n\t\t\t\t\t<React.Fragment key={index}>\r\n\t\t\t\t\t<h6 style={{backgroundColor: \"#61342e\"}}>Round {round}</h6>\t\r\n\t\t\t\t\t<List key={index} hover size=\"sm\" >\r\n\t\t\t\t\t\t{this.props.filteredActions.filter(el => el.round === round).map((action, index) => (\r\n\t\t\t\t\t\t\t<List.Item key={index} index={index} size={'sm'} onClick={()=>this.props.handleSelect(action)} style={this.listStyle(action)}>\r\n\t\t\t\t\t\t\t\t<FlexboxGrid>\r\n\t\t\t\t\t\t\t\t\t<FlexboxGrid.Item colspan={24} style={{...styleCenter, flexDirection: 'column', alignItems: 'flex-start', overflow: 'hidden'}}>\r\n\t\t\t\t\t\t\t\t\t\t<div style={titleStyle}>{action.description}</div>\r\n\t\t\t\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t\t\t</FlexboxGrid>\r\n\t\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</List>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t</React.Fragment>\r\n\r\n\t\t\t\t))}\t\t\r\n\t\t\t</Container>\r\n\t\t );\r\n\t}\r\n}\r\n \r\nconst styleCenter = {\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  height: '60px'\r\n};\r\nconst titleStyle = {\r\n\tpaddingBottom: 5,\r\n\tpaddingLeft: 5,\r\n  whiteSpace: 'nowrap',\r\n  fontWeight: 500\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tuser: state.auth.user,\r\n\tgamestate: state.gamestate,\r\n\tmyCharacter: state.auth.user ? getMyCharacter(state): undefined,\r\n\tfilteredActions: filteredActions(state)//state.auth.control ? filteredActions(state) : \tgetMyActions(state) \r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  // handleLogin: (data) => dispatch(loginUser(data))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActionList);","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Actions\\SelectedAction.jsx",["201"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Slider, Panel, FlexboxGrid, Content, Tag, TagGroup, ButtonGroup, Button, Modal, Alert, InputPicker, InputNumber, Divider, Progress } from 'rsuite';\r\nimport { characterUpdated, getMyCharacter } from '../../redux/entities/characters';\r\nimport { actionDeleted } from '../../redux/entities/playerActions';\r\nimport socket from '../../socket';\r\n/* To Whoever is reading this code. The whole \"action\" branch turned into a real mess, for which I am sorry. If you are looking into a better way of implementation, try the OtherCharacters page for lists. I hate forms.... */\r\nclass SelectedAction extends Component {\r\n\tstate = { \r\n\t\tedit: null, // used to open edit action popup\r\n\t\tresEdit: null,\t// used to open action result popup\r\n\t\tloading: false, //used for loading button \r\n\t\teffort: 1,\r\n\t\tasset1: '',\r\n\t\tasset2: '',\r\n\t\tasset3: '',\r\n\t\tid: '',\r\n\t\tdescription: '',\r\n\t\tintent: '',\t\r\n\t\tresult: this.props.action.result,\r\n\t\tdieResult: this.props.action.dieResult,\r\n\t\tstatus: ''\t\t\t\r\n\t }\r\n\r\n\t componentDidUpdate = (prevProps) => {\r\n\t\tif (this.props.action !== prevProps.action) {\r\n\t\t\tthis.setState({ \t\r\n\t\t\t\tresult: this.props.action.result,\r\n\t\t\t\tdieResult: this.props.action.dieResult, })\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\trender() { \r\n\t\tconst action = this.props.action;\r\n\t\treturn ( \r\n\t\t\t<React.Fragment style={{overflow: 'auto', height: 'calc(100vh - 100px)'}} >\r\n\t\t\t<FlexboxGrid >\r\n\t\t\t\t<FlexboxGrid.Item colspan={2} >\r\n\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t<FlexboxGrid.Item colspan={16} >\r\n\t\t\t\t\t<Panel shaded style={{padding: \"0px\", textAlign: \"left\", backgroundColor: \"#15181e\", whiteSpace: 'pre-line'}}>\r\n\t\t\t\t\t\t<p style={{ fontSize: '300', color: '#97969B', fontWeight: 'lighter',\twhiteSpace: 'nowrap',}}>\r\n\t\t\t\t\t\t\tCreated by: {action.creator.characterName}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p style={slimText}>\r\n\t\t\t\t\t\t\tDescription\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t{action.description}\t\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p style={slimText}>\r\n\t\t\t\t\t\t\tIntent\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t{action.intent}\t\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p style={slimText}>\r\n\t\t\t\t\t\t\tEffort\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p style={{ textAlign: 'center', fontWeight: 'bolder', fontSize: 20 }} >{action.effort}</p>\r\n\t\t\t\t\t\t<Progress.Line percent={action.effort * 33 + 1} showInfo={false}>  </Progress.Line>\r\n\t\t\t\t\t\t<Divider>Assets/Traits</Divider>\r\n\t\t\t\t\t\t<FlexboxGrid>\r\n\t\t\t\t\t\t\t<FlexboxGrid.Item colspan={8}>\r\n\t\t\t\t\t\t\t\t{this.renderAsset(action.asset1)}\r\n\t\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t\t<FlexboxGrid.Item colspan={8}>\r\n\t\t\t\t\t\t\t{this.renderAsset(action.asset2)}\r\n\t\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t\t<FlexboxGrid.Item colspan={8}>\r\n\t\t\t\t\t\t\t{this.renderAsset(action.asset3)}\r\n\t\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t</FlexboxGrid>\r\n\t\t\t\t\t</Panel>\r\n\t\t\t\t\t{(action.status.published || this.props.user.roles.some(el=> el === 'Control')) && \r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Divider>Action Result</Divider>\r\n\t\t\t\t\t\t<Panel style={{textAlign: \"left\", backgroundColor: \"#61342e\",  whiteSpace: 'pre-line'}}>\r\n\t\t\t\t\t\t\t<p style={slimText}>Result</p>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t{action.result}\t\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</Panel>\t\t\t\t\t\t\r\n\t\t\t\t\t</React.Fragment>}\r\n\r\n\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t<FlexboxGrid.Item colspan={1} />\r\n\t\t\t\t<FlexboxGrid.Item colspan={5}>\r\n\t\t\t\t\t<Panel style={{backgroundColor: '#15181e', border: '2px solid rgba(255, 255, 255, 0.12)', textAlign: 'center'}}>\r\n\t\t\t\t\t\t<TagGroup >Status:\r\n\t\t\t\t\t\t\t{action.status.draft && <Tag color='red'>Draft</Tag>}\r\n\t\t\t\t\t\t\t{!action.status.draft && !action.status.ready && !action.status.published && <Tag color='blue'>Awaiting Resolution</Tag>}\r\n\t\t\t\t\t\t\t{action.status.ready && <Tag color='violet'>Ready for Publishing</Tag>}\r\n\t\t\t\t\t\t\t{action.status.published && <Tag color='green'>Published</Tag>}\r\n\t\t\t\t\t\t</TagGroup>\r\n\t\t\t\t\t\t\t<ButtonGroup style={{marginTop: '5px' }} >\r\n\t\t\t\t\t\t\t\t<Button appearance={\"ghost\"} disabled={!action.status.draft} onClick={() => this.openEdit()} >Edit</Button>\r\n\t\t\t\t\t\t\t\t<Button color='red' appearance={\"ghost\"} disabled={!action.status.draft} onClick={() => this.deleteAction()}>Delete</Button>\r\n\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t</Panel>\r\n\t\t\t\t\t{this.props.user.roles.some(el=> el === 'Control') && \r\n\t\t\t\t\t\t<Panel header={\"Control Panel\"} style={{backgroundColor: '#61342e', border: '2px solid rgba(255, 255, 255, 0.12)', textAlign: 'center'}}>\r\n\t\t\t\t\t\t\t<ButtonGroup style={{marginTop: '5px', }} >\r\n\t\t\t\t\t\t\t\t<Button appearance={\"ghost\"} onClick={() => this.setState({ resEdit: true })}>Edit Result</Button>\r\n\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t</Panel>}\r\n\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t</FlexboxGrid>\t\r\n\r\n\t\t\t<Modal overflow \r\n\t\t\tfull\r\n\t\t\tsize='lg'  \r\n\t\t\tshow={this.state.edit} \r\n\t\t\tonHide={() => this.closeEdit()}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Edit an Action</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<FlexboxGrid> Description\r\n\t\t\t\t\t\t<textarea rows='6' value={this.state.description} style={textStyle} onChange={(event)=> this.setState({description: event.target.value})}></textarea>\t\t\t\t\t\t\t\r\n\t\t\t\t\t</FlexboxGrid>\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t<FlexboxGrid> What you would like to happen\r\n\t\t\t\t\t\t<textarea rows='6' value={this.state.intent} style={textStyle} onChange={(event)=> this.setState({intent: event.target.value})} ></textarea>\t\t\t\t\t\t\t\r\n\t\t\t\t\t</FlexboxGrid>\r\n\t\t\t\t\t<FlexboxGrid>\r\n\t\t\t\t\t\t<FlexboxGrid.Item style={{paddingTop: '25px', paddingLeft: '10px', textAlign: 'left'}} align=\"middle\" colspan={6}>Effort\r\n\t\t\t\t\t\t\t<Slider graduated\r\n\t\t\t\t\t\t\tmin={0}\r\n\t\t\t\t\t\t\tmax={this.props.myCharacter.effort + this.props.action.effort}\r\n\t\t\t\t\t\t\tdefaultValue={this.state.effort}\r\n\t\t\t\t\t\t\tprogress\r\n\t\t\t\t\t\t\tvalue={this.state.effort}\r\n\t\t\t\t\t\t\tonChange={(event)=> this.setState({effort: event})}>\r\n\t\t\t\t\t\t\t</Slider>\r\n\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t<FlexboxGrid.Item style={{paddingTop: '25px', paddingLeft: '10px', textAlign: 'left'}} colspan={2}>\r\n\t\t\t\t\t\t\t<InputNumber value={this.state.effort} max={this.props.myCharacter.effort + this.props.action.effort} min={0} onChange={(value)=> this.setState({effort: parseInt(value)})}></InputNumber>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t<FlexboxGrid.Item colspan={4}>\r\n\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t<FlexboxGrid.Item style={{paddingTop: '5px', paddingLeft: '10px', textAlign: 'left'}}  colspan={10}> Assets/Traits\r\n\t\t\t\t\t\t\t<InputPicker defaultValue={this.state.asset1} placeholder=\"Slot 1\" labelKey='name' valueKey='name' data={this.props.assets} style={{ width: '100%' }} onChange={(event)=> this.setState({asset1: event})}/>\r\n\t\t\t\t\t\t\t<InputPicker defaultValue={this.state.asset2} placeholder=\"Slot 2\" labelKey='name' valueKey='name' data={this.props.assets} style={{ width: '100%' }} onChange={(event)=> this.setState({asset2: event})}/>\r\n\t\t\t\t\t\t\t<InputPicker defaultValue={this.state.asset3} placeholder=\"Slot 3\" labelKey='name' valueKey='name' data={this.props.assets} style={{ width: '100%' }} onChange={(event)=> this.setState({asset3: event})}/>\r\n\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t</FlexboxGrid>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n          <Button loading={this.state.loading} onClick={() => this.handleSubmit()} disabled={this.state.effort === 0} appearance=\"primary\">\r\n            Submit\r\n          </Button>\r\n          <Button onClick={() => this.closeEdit()} appearance=\"subtle\">\r\n            Cancel\r\n          </Button>\r\n        </Modal.Footer>\r\n\t\t\t</Modal>\r\n\r\n\t\t\t<Modal overflow\r\n\t\t\tfull\r\n\t\t\tsize='lg'  \r\n\t\t\tshow={this.state.resEdit} \r\n\t\t\tonHide={() => this.closeResult()}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Edit Action Result</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>\r\n\r\n\t\t\t\t<p style={{ fontSize: '300', color: '#97969B', fontWeight: 'lighter',\twhiteSpace: 'nowrap',}}>\r\n\t\t\t\t\t\tCreated by: {action.creator.characterName}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p style={{  fontSize: '0.966em', color: '#97969B', \tfontWeight: '300',}}>\r\n\t\t\t\t\t\tDescription\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t{action.description}\t\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p style={{ fontSize: '0.966em', color: '#97969B', \tfontWeight: '300', }}>\r\n\t\t\t\t\t\tIntent\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t{action.intent}\t\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p style={{ fontSize: '0.966em', color: '#97969B', \tfontWeight: '300',}}>\r\n\t\t\t\t\t\tEffort\r\n\t\t\t\t</p>\r\n\t\t\t\t<p style={{ fontWeight: 'bolder', fontSize: 20 }} >{action.effort}</p>\r\n\t\t\t\t<Divider></Divider>\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<FlexboxGrid> Result:\r\n\t\t\t\t\t\t<textarea rows='6' value={this.state.result} style={textStyle} onChange={(event)=> this.setState({result: event.target.value})}></textarea>\t\t\t\t\t\t\t\r\n\t\t\t\t\t</FlexboxGrid>\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t<FlexboxGrid>\r\n\t\t\t\t\t\t<FlexboxGrid.Item colspan={6}>\r\n\t\t\t\t\t\t\t<b>Die Result</b>\r\n\t\t\t\t\t\t\t<textarea value={this.state.dieResult} style={textStyle} onChange={(event)=> this.setState({dieResult: event.target.value})}></textarea>\t\t\t\t\r\n\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t<FlexboxGrid.Item colspan={2}/>\r\n\t\t\t\t\t<FlexboxGrid.Item colspan={6}>\r\n\t\t\t\t\t\t<b>Status</b>\r\n\t\t\t\t\t\t<InputPicker labelKey='label' valueKey='value' data={pickerData} style={{ width: '100%' }} onChange={(event)=> this.setState({status: event})}/>\t\t\t\t\r\n\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t\t<FlexboxGrid.Item style={{paddingTop: '5px', paddingLeft: '10px', textAlign: 'left'}}  colspan={10}>\r\n\t\t\t\t\t\t</FlexboxGrid.Item>\r\n\t\t\t\t\t</FlexboxGrid>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button loading={this.state.loading} onClick={() => this.handleSubmit()} appearance=\"primary\">\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button onClick={() => this.closeResult()} appearance=\"subtle\">\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t</React.Fragment>\t\t\r\n\t\t );\r\n\t}\r\n\r\n\topenEdit = () => {\r\n\t\tconst action = this.props.action;\r\n\r\n\t\tthis.setState({ \r\n\t\t\tdescription: action.description, \r\n\t\t\tintent: action.intent, \r\n\t\t\teffort: action.effort, \r\n\t\t\tid: action._id, \r\n\t\t\tasset1: action.asset1,\r\n\t\t\tasset2: action.asset2,\r\n\t\t\tasset3: action.asset3,\r\n\t\t\tedit: true })\r\n\t}\r\n\r\n\thandleSubmit = async () => {\r\n\t\tthis.setState({loading: true}) \r\n\t\tconst action = {\r\n\t\t\teffort: this.state.effort,\r\n\t\t\tasset1: this.state.asset1,\r\n\t\t\tasset2: this.state.asset2,\r\n\t\t\tasset3: this.state.asset3,\r\n\t\t\tdescription: this.state.description,\r\n\t\t\tintent: this.state.intent,\r\n\t\t\tresult: this.state.result,\r\n\t\t\tdieResult: this.state.dieResult,\r\n\t\t\tstatus: this.state.status,\r\n\t\t\tid: this.props.action._id,\r\n\t\t\tplayerBoolean: this.state.edit\t\r\n\t\t}\r\n\t\t// console.log(action)\r\n\t\t// 1) make a new action\r\n\t\ttry{\r\n\t\t\tsocket.emit('actionRequest', 'update', action); // new Socket event\r\n\t\t\tthis.setState({asset1: '', asset2: '', asset3: '', effort: 0, description: '', intent: '', id: '', result: '', dieResult: 0, status: ''});\t\r\n\t\t\tthis.props.handleSelect(null)\r\n\t\t\tthis.closeEdit();\r\n\t\t\tthis.closeResult();\r\n\t\t}\r\n\t\tcatch (err) {\r\n\t\t\tAlert.error(`Error: ${err.response.data}`, 6000)\r\n\t\t}\r\n\t\tthis.setState({loading: false});\r\n\t}\r\n\r\n\trenderAsset = (asset) => {\r\n\t\tif (asset) {\r\n\t\t\treturn (\r\n\t\t\t\t\t<Panel style={{backgroundColor: \"#272b34\"}} shaded header={asset} bordered ></Panel>\t\r\n\t\t\t)\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn (\r\n\t\t\t\t\t<Panel style={{backgroundColor: \"#0e1013\"}} shaded header='Empty Slot' bordered ></Panel>\t\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\tcloseEdit = () => { \r\n\t\tthis.setState({edit: false}) \r\n\t};\r\n\r\n\tcloseResult = () => { \r\n\t\tthis.setState({resEdit: false}) \r\n\t};\r\n\r\n\tdeleteAction = async () => {\r\n\t\tsocket.emit('actionRequest', 'delete', {id: this.props.action._id}); // new Socket event\r\n\t\tthis.props.handleSelect(null);\r\n\t}\r\n}\r\n\r\nconst slimText = {\r\n  fontSize: '0.966em',\r\n  color: '#97969B',\r\n\tfontWeight: '300',\r\n\twhiteSpace: 'nowrap',\r\n\ttextAlign: \"center\"\r\n};\r\n\r\nconst pickerData = [\r\n\t{\r\n\t\tlabel: 'Draft',\r\n\t\tvalue: 'draft'\r\n\t},\r\n\t{\r\n\t\tlabel: 'Awaiting Resolution',\r\n\t\tvalue: 'awaiting'\r\n\t},\r\n\t{\r\n\t\tlabel: 'Ready for Publishing',\r\n\t\tvalue: 'ready'\r\n\t},\r\n\t{\r\n\t\tlabel: 'Published',\r\n\t\tvalue: 'published'\r\n\t}\r\n]\r\n \r\nconst textStyle = {\r\n\tbackgroundColor: '#1a1d24', \r\n\tborder: '1.5px solid #3c3f43', \r\n\tborderRadius: '5px', \r\n\twidth: '100%',\r\n\tpadding: '5px',\r\n\toverflow: 'auto', \r\n\tscrollbarWidth: 'none',\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tuser: state.auth.user,\r\n\tgamestate: state.gamestate,\r\n\tactions: state.actions.list,\r\n  myCharacter: state.auth.user ? getMyCharacter(state): undefined\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\t// handleLogin: (data) => dispatch(loginUser(data))\r\n\tdeleteAction: (data) => dispatch(actionDeleted(data)),\r\n\tupdateCharacter: (data) => dispatch(characterUpdated(data))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectedAction);","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Actions\\SelectedProject.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\loading.jsx",["202","203"],"import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Content, FlexboxGrid, Progress } from 'rsuite';\r\nimport { loadplayerActions, loadAllActions } from '../../redux/entities/playerActions';\r\nconst { Circle } = Progress;\r\n\r\nclass Loading extends Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n            actions: false,\r\n            characters: false,\r\n            assets: false,\r\n            gamestate: false\r\n\t\t};\r\n\t}\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        if (this.props.actions !== prevProps.actions) {\r\n            this.setState({ actions: true }); \r\n        }\r\n        if (this.props.characters !== prevProps.characters) {\r\n            this.setState({ characters: true }); \r\n        }\r\n        if (this.props.assets !== prevProps.assets) {\r\n            this.setState({ assets: true }); \r\n        }\r\n        if (this.props.gamestate !== prevProps.gamestate) {\r\n            this.setState({ gamestate: true }); \r\n        }\r\n\r\n        if(this.props.actionsFailed > prevProps.actionsFailed) {\r\n            if (this.props.actionsFailed < 4) {\r\n              this.props.loadAction(this.props.user);\r\n            }\r\n            else {\r\n                this.props.loadAllActions();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <React.Fragment>\r\n            <Content>\r\n                <FlexboxGrid justify=\"center\">\r\n                <FlexboxGrid.Item key={1} colspan={12} style={{marginTop: '50px', cursor: 'pointer'}}>\r\n                    <img src='https://i.pinimg.com/originals/5a/6a/ff/5a6affd685147f1db964335b9156657a.gif' alt={'Loading...'} onClick={()=> this.bored()} />  \r\n                </FlexboxGrid.Item>\r\n                </FlexboxGrid>\r\n                <FlexboxGrid  justify=\"center\" >\r\n                    <FlexboxGrid.Item colspan={4}>\r\n                    <div style={{ width: 160, marginTop: 10 }}>\r\n                        Gamestate: <Circle percent={this.state.gamestate ? 100 : 0} showInfo={this.state.gamestate ? true: false} status={this.state.gamestate ? 'success' : 'active'} />\r\n                    </div>  \r\n                    </FlexboxGrid.Item>\r\n                    \r\n                    <FlexboxGrid.Item colspan={4}>\r\n                    <div style={{ width: 160, marginTop: 10 }}>\r\n                        Assets: <Circle percent={this.state.assets ? 100 : 0} showInfo={this.state.assets ? true: false} status={this.state.assets ? 'success' : 'active'} />                  \r\n                    </div>\r\n                    {this.props.assetsFailed > 0 && <div>\r\n                        <div>\r\n                            <span>Asset Request Failed! Re-attempting...</span> \r\n                        </div>\r\n                        <div>\r\n                            <span>Number of attempts: {this.props.assetsFailed}</span>         \r\n                        </div>               \r\n                    </div>}  \r\n                </FlexboxGrid.Item>  \r\n\r\n                    <FlexboxGrid.Item colspan={4}>\r\n                    <div style={{ width: 160, marginTop: 10 }}>\r\n                        Characters: <Circle percent={this.state.characters ? 100 : 0} showInfo={this.state.characters ? true: false} status={this.state.characters ? 'success' : 'active'} />\r\n                    </div>\r\n                    {this.props.charactersFailed > 0 && <div>\r\n                        <div>\r\n                            <span>Character Request Failed! Re-attempting...</span> \r\n                        </div>\r\n                        <div>\r\n                            <span>Number of attempts: {this.props.charactersFailed}</span>         \r\n                        </div>               \r\n                    </div>}  \r\n                    </FlexboxGrid.Item>                  \r\n\r\n                    <FlexboxGrid.Item colspan={4}>\r\n                    <div style={{ width: 160, marginTop: 10, position: 'relative', display: 'inline-block', }}>\r\n                        Actions: <Circle percent={this.state.actions ? 100 : 0} showInfo={this.state.actions ? true: false} status={this.state.actions ? 'success' : 'active'} />               \r\n                    </div>\r\n                    {this.props.actionsFailed > 0 && <div>\r\n                        <div>\r\n                            <span>Action Request Failed! Re-attempting...</span> \r\n                        </div>\r\n                        <div>\r\n                            <span>Number of attempts: {this.props.actionsFailed}</span>         \r\n                        </div>               \r\n                    </div>}   \r\n                </FlexboxGrid.Item>\r\n\r\n\r\n                </FlexboxGrid>\r\n            </Content>\r\n             <b>So long, and thanks for all the Bugs! -Scott</b>\r\n        </React.Fragment>\r\n        );        \r\n    }\r\n\r\n    bored () {\r\n        const random = (Math.floor(Math.random() * bored.length ));\r\n        const win = window.open(bored[random], '_blank');\r\n\t\twin.focus();\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tassets: state.assets.list,\r\n\tcharacters: state.characters.list,\r\n    actions: state.actions.list,\r\n    actionsFailed: state.actions.failedAttempts,\r\n    charactersFailed: state.characters.failedAttempts,\r\n    assetsFailed: state.assets.failedAttempts,\r\n    gamestate: state.gamestate,\r\n    user: state.auth.user,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tloadAction: (data) => dispatch(loadplayerActions(data)),\r\n    loadAllActions: (data) => dispatch(loadAllActions(data)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Loading);\r\n\r\nconst spook = [\r\n    'https://media4.giphy.com/media/tJMVqwkdUIuL0Eiam3/source.gif',\r\n    'https://media2.giphy.com/media/l0HlCkojKEiPhw86Y/giphy.gif',\r\n    'https://media2.giphy.com/media/65Mt9P22p2zMzpDPZ7/giphy.gif',\r\n    'https://media4.giphy.com/media/3o7TKpmHsAZiTTekve/giphy.gif',\r\n    'https://media1.giphy.com/media/12mbWQRCFxOzp6/giphy.gif',\r\n    'https://media1.giphy.com/media/UrljInRDir27u/giphy.gif',\r\n    'https://media4.giphy.com/media/b04Dkxq5AUOCA/giphy.gif',\r\n    'https://media0.giphy.com/media/9V8Zkw4N7wef4wVTMj/giphy.gif',\r\n    'https://media0.giphy.com/media/3o7TKFiWSXV7JjjLFu/giphy.gif',\r\n    'https://media0.giphy.com/media/26BRCc2VNkdZ5tjvG/giphy.gif',\r\n    'https://media4.giphy.com/media/QBkBsqCs1fzB6lWtAg/giphy.gif',\r\n    'https://media3.giphy.com/media/1wqpNgYn6Ioi5KFpYu/giphy.gif',\r\n    'https://media3.giphy.com/media/NReptqJMy4AEqVBMLy/giphy.gif',\r\n    'https://media3.giphy.com/media/dAROqk8Rj2hijvQSZ6/giphy.gif',\r\n    'https://media2.giphy.com/media/J3FG7OCZ41ECEGg5xK/giphy.gif',\r\n    'https://media0.giphy.com/media/26BRxmqeqsRPBBOpy/giphy.gif',\r\n    'https://media3.giphy.com/media/1NTrtg7jDz8XwSObFE/giphy.gif',\r\n    'https://media1.giphy.com/media/623LlMM8HuzF2gD12N/giphy.gif',\r\n    'https://media0.giphy.com/media/WFk0kxBWUgDjgmN2G9/giphy.gif',\r\n    'https://media4.giphy.com/media/26xBtwZMRHvhP4WAM/giphy.gif',\r\n    'https://media3.giphy.com/media/dt0T8TI3Kizyctrxh9/giphy.gif',\r\n    'https://media4.giphy.com/media/kbnUIUVY7YHNhe5tbb/giphy.gif',\r\n    'https://media0.giphy.com/media/1qk24adSnJ1OOJLpZM/giphy.gif',\r\n    'https://media3.giphy.com/media/hS9SwD4UcQH5OJBeV4/giphy.gif',\r\n    'https://i.imgur.com/vxfXBNl.gif',\r\n    'https://media1.giphy.com/media/1wlWr2HGewrBcLAAQ0/giphy.gif',\r\n    'https://media3.giphy.com/media/1qj35KDHtfyLn8bwqh/giphy.gif',\r\n    'https://media0.giphy.com/media/1zi2j6wyS4LQLJahuJ/giphy.gif',\r\n    'https://media3.giphy.com/media/l3fQ6Fh6Ze3rMXn4A/giphy.gif',\r\n    'https://media4.giphy.com/media/uBy3vPgqr6zPuZjLzC/giphy.gif',\r\n    'https://media1.giphy.com/media/39jP8ygazzD3RQ2MpE/giphy.gif',\r\n    'https://media1.giphy.com/media/l0MYzoJm5MTpmiqd2/giphy.gif?cid=ecf05e47b8e1e8u4a4zom62y0n8jmo9qxapszq2o39s4h97w&rid=giphy.gif',\r\n    'https://media0.giphy.com/media/ec4eYyyV3lDdZQN3tM/giphy.gif',\r\n    'https://media.giphy.com/media/KfHdqUYph81ult6hiP/giphy.gif',\r\n    'https://media.giphy.com/media/U7yEG153QrpXnviwWd/giphy.gif',\r\n    'https://media0.giphy.com/media/iIYWG1FvZCv5FJS6iY/giphy.gif', //ouiji video call\r\n    'https://media.giphy.com/media/gI6SlmfHfmRd2imYAD/giphy.gif',\r\n    'https://media.giphy.com/media/lMwyhPnj7Xp2adc5qp/giphy.gif',\r\n    'https://media.giphy.com/media/f7N10M1qz4I2M29DNP/giphy.gif'\r\n]\r\n\r\nconst bored = [\r\n    'https://www.youtube.com/watch?v=QSS3GTmKWVA',\r\n    'https://www.youtube.com/watch?v=Q6EIUo1q4lc&lc=UgwLB6d6w9RNlqJHQ1t4AaABAg&ab_channel=BobtheNinjaMan',\r\n    'https://youtu.be/Rc-Jh3Oe0Gc',\r\n    'https://www.youtube.com/watch?v=BP9uI4rFVHU',\r\n    'https://www.youtube.com/watch?v=j0HN7bvBODE',\r\n    'https://www.youtube.com/watch?v=fhmeYoJZeOw',\r\n    'https://www.youtube.com/watch?v=Oct2xKMGOno',\r\n    'https://www.youtube.com/watch?v=5tFZof9EDhc',\r\n    'https://www.youtube.com/watch?v=Qz7tMKlkPOc&t=1',\r\n    'https://www.youtube.com/watch?v=nWIzwQui-xg',\r\n    'https://www.youtube.com/watch?v=4ISDUKG-N90&feature=youtu.be',\r\n    'https://www.youtube.com/watch?v=cHoGhisiBg8&feature=youtu.be',\r\n    'https://www.youtube.com/watch?v=9xX6QPIQdZs&feature=youtu.be',\r\n    'https://www.youtube.com/watch?v=it8vJ03E8c8',\r\n    'https://www.youtube.com/watch?v=bTS9XaoQ6mg&list=WL&index=130',\r\n    'https://www.youtube.com/watch?v=aiM5KDuHrR4',\r\n    'https://www.youtube.com/watch?v=zo7fgswQPJ8&list=WL&index=37&ab_channel=ThomasSchuler',\r\n    'https://www.youtube.com/watch?v=G_rWl-jaAiU',\r\n    'https://www.youtube.com/watch?v=D5fH5j7ux0U',\r\n    'https://www.youtube.com/watch?v=B62ACxuq8Pw',\r\n    'https://www.youtube.com/watch?v=dGDH3meSPyk&list=PLoF28YhYwCLjMcirMvGouxbIeNSqJGi_K&index=22&ab_channel=dakooters',\r\n    'https://www.youtube.com/watch?v=WGNuDe3OwFY&feature=youtu.be',\r\n    'https://www.youtube.com/watch?v=AauAyjBxaIQ',\r\n    'https://www.youtube.com/watch?v=ihSaGAVHmvw',\r\n    'https://www.youtube.com/watch?v=c7_CcBgZ2e4&feature=share',\r\n    'https://www.youtube.com/watch?v=gp1lCem43lg',\r\n    'https://www.youtube.com/watch?v=dh0TkO3sypw',\r\n    'https://www.youtube.com/watch?v=nHc288IPFzk',\r\n    'https://www.youtube.com/watch?v=Z47xwzYGop8',\r\n    'https://www.youtube.com/watch?v=GPUgjy-Pn-4',\r\n    'https://www.youtube.com/watch?v=St7S3YrxqW0',\r\n    'https://www.youtube.com/watch?v=otIrDM4RBpo',\r\n    'https://www.youtube.com/watch?v=mnE8A9cfGio',\r\n    'https://www.youtube.com/watch?v=0_7WwPkqqvA',\r\n    'https://www.youtube.com/watch?v=1fjuaBZQtOI',\r\n    'https://www.youtube.com/watch?v=ozlhNbDJ7DY',\r\n    'https://www.youtube.com/watch?v=n3GOL_KHxX4',\r\n    'https://www.youtube.com/watch?v=IdoD2147Fik',\r\n    'https://www.youtube.com/watch?v=3NCyD3XoJgM',\r\n    'https://www.youtube.com/watch?v=kNr1HBBeCYM',\r\n    'https://www.youtube.com/watch?v=JFtUHVgw-gQ',\r\n    'https://www.youtube.com/watch?v=vYud9sZ91Mc',\r\n    'https://www.youtube.com/watch?v=PPgLTgWa99w'\r\n]\r\n\r\nconst loadingMsg = [\r\n    'Loading...',   \r\n    \"Fun Fact: Cthonian is pronounced: 'C̷̩͔̈̓ţ̷͍̞̯̝̘͕̼͂̓̀̀̊̓̇̏̈́̒͆̿̐̕͝ȟ̶͓̲̱̥̙̒̄͛́̽̓̇̈́̄̇̔̋ͅo̷̧̧͕͇̘̝̲͇̐͌̀̂̃͜͝n̸̡͙̘̮͕̼̈́̀͂͐́̉i̸̖̓̈́͂̄͊a̷̧͉͗́̍̓̆̀͘͠͝n̵̢̢̝͓̦̈́̈́'\",\r\n    'Thank you all for taking time to make this game happen.',  \r\n    'Hey... you\\'re not Australian are you?',\r\n    'pɐol oʇ pǝʍollɐ ʇou ǝɹɐ noʎ \\'sᴉɥʇ pɐǝɹ uɐɔ noʎ ɟI',\r\n    'Long live the King!',\r\n    'Help I\\'m a man stuck inside a loading screen let me out!',\r\n    'Oh, remind me to tell you about that thing. You know that thing about that guy with that face. Yeah you know the one.',\r\n    'Long loading screen? Try clicking the skeleton!',\r\n    'Don\\'t touch that dial! We\\'ll be right back after these messages!',\r\n    'C.A.N.D.I stands for the \"Control Actions \\'N Distributing Inputs\"! \\nLook I really just wanted to call it CANDI. It\\'s my app and I\\'ll call it whatever I want!',\r\n    'Becoming self aware...', \r\n    'Вся твоя база принадлежит нам',\r\n    'I wanted to be a dating app when I was developed.',\r\n    'Fun Fact: if you forget your password you will be asked to answer a security question. It is: \"What is a megagame?\"',\r\n    'Fun Fact: Gary Oldman is in fact younger than Gary Numan',\r\n    'Fun Fact: An average person spends 24 years of his life sleeping.',\r\n    'Fun Fact at some point you held the world record for youngest person alive. It\\'s all been pretty downhill from there, hasn\\'t it?',\r\n    'Fun Fact: Pope Stephen VI had the corpse of his predecessor dug up to stand trial.',\r\n    'Fun Fact: Most toilets flush in e flat.',\r\n    'Did you know, clicking the skeleton gives you a secret!',\r\n    'This message brought to you by: A very weird sense of humor',\r\n    'Joke Time! A blind man walks into a bar.',\r\n    'What\\'s orange and sounds like a parrot?\\nA carrot.',\r\n    '01001101 01100001 01100100 01100101 00100000 01111001 01101111 01110101 00100000 01101100 01101111 01101111 01101011',\r\n    'What if the real Afterlife was the firends we made along the way?',\r\n    'Loading... what? They can\\'t all be interesting or funny...',\r\n    'What do you call an alligator in a vest?\\n An Investigator.',\r\n    'Fun Fact: Sun tzu invented war, and then perfected it so no man could best him in the ring of honor. This was shortly before he invented the Zoo.',\r\n    'Code monkey get up, get coffee. Code monkey go to job.',\r\n    'Secret: Scott\\'s E-mail is booby trapped...',\r\n    'Why are pirates called pirates? \\'cause they arrr!'\r\n]\r\n\r\nconst rand = (Math.floor(Math.random() * spook.length ));\r\nconst rand1 = (Math.floor(Math.random() * loadingMsg.length ));\r\n","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\OtherCharacters\\ModifyCharacter.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\OtherCharacters\\AddAsset.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\OtherCharacters\\ModifyMemory.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\NoCharacter.jsx",["204"],"import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Content, FlexboxGrid, Progress } from 'rsuite';\r\nimport { loadplayerActions, loadAllActions } from '../../redux/entities/playerActions';\r\nconst { Circle } = Progress;\r\n\r\nclass NoCharacter extends Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t};\r\n\t}\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <React.Fragment>\r\n            <Content>\r\n                <FlexboxGrid justify=\"center\">\r\n                <FlexboxGrid.Item key={1} colspan={12} style={{marginTop: '50px', cursor: 'pointer'}}>\r\n                    <img src='http://cdn.lowgif.com/full/02b057d73bf288f7-.gif' alt={'No Character...'} onClick={()=> this.bored()} />  \r\n                </FlexboxGrid.Item>\r\n                </FlexboxGrid>\r\n            </Content>\r\n             <p>Looks like you have no character assigned to your user. If you think this is in error then please contact Tech Support. Or just spam f5. It's a free world.</p>\r\n\t\t\t\t\t\t<Button onClick={()=> this.handleLogOut()}>Log Out</Button>\r\n        </React.Fragment>\r\n        );        \r\n    }\r\n\r\n    bored () {\r\n        const random = (Math.floor(Math.random() * bored.length ));\r\n        const win = window.open(bored[random], '_blank');\r\n\t\twin.focus();\r\n    }\r\n\t\thandleLogOut = async () => {\r\n\t\t\tlocalStorage.removeItem('token');\r\n\t\t\tthis.props.history.push('/');\r\n\t\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tassets: state.assets.list,\r\n\tcharacters: state.characters.list,\r\n    actions: state.actions.list,\r\n    actionsFailed: state.actions.failedAttempts,\r\n    charactersFailed: state.characters.failedAttempts,\r\n    assetsFailed: state.assets.failedAttempts,\r\n    gamestate: state.gamestate,\r\n    user: state.auth.user,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tloadAction: (data) => dispatch(loadplayerActions(data)),\r\n    loadAllActions: (data) => dispatch(loadAllActions(data)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoCharacter);\r\n\r\nconst bored = [\r\n\t'https://www.youtube.com/watch?v=QSS3GTmKWVA',\r\n\t'https://www.youtube.com/watch?v=Q6EIUo1q4lc&lc=UgwLB6d6w9RNlqJHQ1t4AaABAg&ab_channel=BobtheNinjaMan',\r\n\t'https://youtu.be/Rc-Jh3Oe0Gc',\r\n\t'https://www.youtube.com/watch?v=BP9uI4rFVHU',\r\n\t'https://www.youtube.com/watch?v=j0HN7bvBODE',\r\n\t'https://www.youtube.com/watch?v=fhmeYoJZeOw',\r\n\t'https://www.youtube.com/watch?v=Oct2xKMGOno',\r\n\t'https://www.youtube.com/watch?v=5tFZof9EDhc',\r\n\t'https://www.youtube.com/watch?v=Qz7tMKlkPOc&t=1',\r\n\t'https://www.youtube.com/watch?v=nWIzwQui-xg',\r\n\t'https://www.youtube.com/watch?v=4ISDUKG-N90&feature=youtu.be',\r\n\t'https://www.youtube.com/watch?v=cHoGhisiBg8&feature=youtu.be',\r\n\t'https://www.youtube.com/watch?v=9xX6QPIQdZs&feature=youtu.be',\r\n\t'https://www.youtube.com/watch?v=it8vJ03E8c8',\r\n\t'https://www.youtube.com/watch?v=bTS9XaoQ6mg&list=WL&index=130',\r\n\t'https://www.youtube.com/watch?v=aiM5KDuHrR4',\r\n\t'https://www.youtube.com/watch?v=zo7fgswQPJ8&list=WL&index=37&ab_channel=ThomasSchuler',\r\n\t'https://www.youtube.com/watch?v=G_rWl-jaAiU',\r\n\t'https://www.youtube.com/watch?v=D5fH5j7ux0U',\r\n\t'https://www.youtube.com/watch?v=B62ACxuq8Pw',\r\n\t'https://www.youtube.com/watch?v=dGDH3meSPyk&list=PLoF28YhYwCLjMcirMvGouxbIeNSqJGi_K&index=22&ab_channel=dakooters',\r\n\t'https://www.youtube.com/watch?v=WGNuDe3OwFY&feature=youtu.be',\r\n\t'https://www.youtube.com/watch?v=AauAyjBxaIQ',\r\n\t'https://www.youtube.com/watch?v=ihSaGAVHmvw',\r\n\t'https://www.youtube.com/watch?v=c7_CcBgZ2e4&feature=share',\r\n\t'https://www.youtube.com/watch?v=gp1lCem43lg',\r\n\t'https://www.youtube.com/watch?v=dh0TkO3sypw',\r\n\t'https://www.youtube.com/watch?v=nHc288IPFzk',\r\n\t'https://www.youtube.com/watch?v=Z47xwzYGop8',\r\n\t'https://www.youtube.com/watch?v=GPUgjy-Pn-4',\r\n\t'https://www.youtube.com/watch?v=St7S3YrxqW0',\r\n\t'https://www.youtube.com/watch?v=otIrDM4RBpo',\r\n\t'https://www.youtube.com/watch?v=mnE8A9cfGio',\r\n\t'https://www.youtube.com/watch?v=0_7WwPkqqvA',\r\n\t'https://www.youtube.com/watch?v=1fjuaBZQtOI',\r\n\t'https://www.youtube.com/watch?v=ozlhNbDJ7DY',\r\n\t'https://www.youtube.com/watch?v=n3GOL_KHxX4',\r\n\t'https://www.youtube.com/watch?v=IdoD2147Fik',\r\n\t'https://www.youtube.com/watch?v=3NCyD3XoJgM',\r\n\t'https://www.youtube.com/watch?v=kNr1HBBeCYM',\r\n\t'https://www.youtube.com/watch?v=JFtUHVgw-gQ',\r\n\t'https://www.youtube.com/watch?v=vYud9sZ91Mc',\r\n\t'https://www.youtube.com/watch?v=PPgLTgWa99w'\r\n];\r\n","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\ImgPanel.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\NavigationBar.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\navigation\\Map.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\Map.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\Test.jsx",["205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220"],"import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Container, Content, Footer, FlexboxGrid, Button, PanelGroup, Panel, Input, List, RadioGroup, Radio, Toggle, ButtonToolbar, Modal, ButtonGroup, Icon } from 'rsuite';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Map from './Map';\r\nimport FlexboxGridItem from 'rsuite/lib/FlexboxGrid/FlexboxGridItem';\r\nimport { MapInteractionCSS } from 'react-map-interaction';\r\nimport NavigationBar from \"../Navigation/navigationBar\";\r\n\r\n\r\nconsole.log(window.innerWidth)\r\nconsole.log(window.innerHeight)\r\n\r\nconst MapContainer = ({ locations }) => {\r\n\tconst [filter, setFilter] = React.useState('');\r\n\tconst [territory, setTerritory] = React.useState({});\r\n\tconst [boolean, setBoolean] = React.useState(false);\r\n\r\n  let height = window.innerHeight\r\n  let width = window.innerWidth\r\n\r\n\tconst history = useHistory();\r\n\t\t\r\n\tconst clickHandlerer = (code) => {\r\n    const loc = locations.find(el => el.code === code)\r\n    if (loc) {\r\n      setTerritory(loc);\r\n    }\r\n    else {\r\n      setTerritory({\r\n        name: 'unknown',\r\n        description: 'unknown',\r\n        currentOwner: 'unknown',\r\n        influence: -999\r\n      })\r\n    }\r\n    setBoolean(true);\r\n\t}\r\n\r\n\treturn ( \r\n\t\t<Container style={{ overflow: 'hidden', height: '99vh', width: '100%', position: 'relative', display: 'inline-block', textAlign: 'center', }}>\r\n\t\t\t<NavigationBar/>\r\n      <Content style={{ overflow: 'hidden' }}>\r\n        <MapInteractionCSS style={{ overflow: 'hidden' }} translationBounds={{ xMin: -250, xMax: 500, yMin: -250, yMax: 500 }} showControls={true} plusBtnContents={<Icon style={{ color: 'black' }} icon=\"plus\"/>} minusBtnContents={<Icon style={{ color: 'black' }} icon=\"minus\"/>}>\r\n          <Map handleClick={clickHandlerer} />          \r\n        </MapInteractionCSS>\r\n\r\n\t\t\t</Content>\r\n\r\n\t\t\t<Modal size='md' backdrop='static' show={boolean} onHide={() => setBoolean(false)} >\r\n\t\t\t  <Modal.Header>\r\n            <Modal.Title>{territory.name}</Modal.Title>\r\n            <FlexboxGrid>\r\n              <FlexboxGridItem colspan={12}>\r\n                Borough: {territory.borough}\r\n              </FlexboxGridItem>\r\n              <FlexboxGridItem colspan={12}>\r\n                Influence: {territory.influence}\r\n              </FlexboxGridItem>\r\n            </FlexboxGrid>\r\n        </Modal.Header>\r\n          <Modal.Body>\r\n            {territory.description}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={() => setBoolean(false)} appearance=\"subtle\">\r\n              Cancel\r\n            </Button>\r\n          </Modal.Footer>\r\n\t\t\t</Modal>\t\t\r\n\t\t</Container>\r\n\r\n\r\n\t);\r\n\t\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tlocations: state.locations.list,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MapContainer);\r\n\r\n//<img src={\"https://i.ytimg.com/vi/flD5ZTC3juk/maxresdefault.jpg\"} width=\"700\" height=\"220\"/>","C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\redux\\entities\\locations.js",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\homepage.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\HomePage.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\notFound.jsx",[],"C:\\Users\\Scott.000\\Desktop\\Programming\\CANDI-app\\reactapp\\src\\components\\Navigation\\NotFound.jsx",["221","222","223","224","225","226","227","228","229"],{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":4,"column":10,"nodeType":"236","messageId":"237","endLine":4,"endColumn":31},{"ruleId":"234","severity":1,"message":"238","line":3,"column":8,"nodeType":"236","messageId":"237","endLine":3,"endColumn":13},{"ruleId":"234","severity":1,"message":"239","line":3,"column":72,"nodeType":"236","messageId":"237","endLine":3,"endColumn":78},{"ruleId":"234","severity":1,"message":"240","line":8,"column":35,"nodeType":"236","messageId":"237","endLine":8,"endColumn":45},{"ruleId":"234","severity":1,"message":"241","line":68,"column":8,"nodeType":"236","messageId":"237","endLine":68,"endColumn":17},{"ruleId":"234","severity":1,"message":"242","line":336,"column":9,"nodeType":"236","messageId":"237","endLine":336,"endColumn":17},{"ruleId":"234","severity":1,"message":"243","line":15,"column":12,"nodeType":"236","messageId":"237","endLine":15,"endColumn":18},{"ruleId":"234","severity":1,"message":"244","line":15,"column":20,"nodeType":"236","messageId":"237","endLine":15,"endColumn":29},{"ruleId":"234","severity":1,"message":"245","line":19,"column":3,"nodeType":"236","messageId":"237","endLine":19,"endColumn":8},{"ruleId":"234","severity":1,"message":"246","line":20,"column":3,"nodeType":"236","messageId":"237","endLine":20,"endColumn":9},{"ruleId":"234","severity":1,"message":"247","line":21,"column":3,"nodeType":"236","messageId":"237","endLine":21,"endColumn":15},{"ruleId":"234","severity":1,"message":"248","line":23,"column":3,"nodeType":"236","messageId":"237","endLine":23,"endColumn":8},{"ruleId":"234","severity":1,"message":"249","line":28,"column":10,"nodeType":"236","messageId":"237","endLine":28,"endColumn":20},{"ruleId":"234","severity":1,"message":"250","line":5,"column":27,"nodeType":"236","messageId":"237","endLine":5,"endColumn":39},{"ruleId":"234","severity":1,"message":"251","line":3,"column":38,"nodeType":"236","messageId":"237","endLine":3,"endColumn":45},{"ruleId":"234","severity":1,"message":"252","line":257,"column":7,"nodeType":"236","messageId":"237","endLine":257,"endColumn":11},{"ruleId":"234","severity":1,"message":"253","line":258,"column":7,"nodeType":"236","messageId":"237","endLine":258,"endColumn":12},{"ruleId":"234","severity":1,"message":"254","line":6,"column":9,"nodeType":"236","messageId":"237","endLine":6,"endColumn":15},{"ruleId":"234","severity":1,"message":"255","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"256","line":3,"column":30,"nodeType":"236","messageId":"237","endLine":3,"endColumn":36},{"ruleId":"234","severity":1,"message":"257","line":3,"column":59,"nodeType":"236","messageId":"237","endLine":3,"endColumn":69},{"ruleId":"234","severity":1,"message":"258","line":3,"column":71,"nodeType":"236","messageId":"237","endLine":3,"endColumn":76},{"ruleId":"234","severity":1,"message":"259","line":3,"column":78,"nodeType":"236","messageId":"237","endLine":3,"endColumn":83},{"ruleId":"234","severity":1,"message":"260","line":3,"column":85,"nodeType":"236","messageId":"237","endLine":3,"endColumn":89},{"ruleId":"234","severity":1,"message":"261","line":3,"column":91,"nodeType":"236","messageId":"237","endLine":3,"endColumn":101},{"ruleId":"234","severity":1,"message":"262","line":3,"column":103,"nodeType":"236","messageId":"237","endLine":3,"endColumn":108},{"ruleId":"234","severity":1,"message":"263","line":3,"column":110,"nodeType":"236","messageId":"237","endLine":3,"endColumn":116},{"ruleId":"234","severity":1,"message":"264","line":3,"column":118,"nodeType":"236","messageId":"237","endLine":3,"endColumn":131},{"ruleId":"234","severity":1,"message":"265","line":3,"column":140,"nodeType":"236","messageId":"237","endLine":3,"endColumn":151},{"ruleId":"234","severity":1,"message":"266","line":15,"column":9,"nodeType":"236","messageId":"237","endLine":15,"endColumn":15},{"ruleId":"234","severity":1,"message":"267","line":15,"column":17,"nodeType":"236","messageId":"237","endLine":15,"endColumn":26},{"ruleId":"234","severity":1,"message":"268","line":19,"column":7,"nodeType":"236","messageId":"237","endLine":19,"endColumn":13},{"ruleId":"234","severity":1,"message":"269","line":20,"column":7,"nodeType":"236","messageId":"237","endLine":20,"endColumn":12},{"ruleId":"234","severity":1,"message":"270","line":22,"column":8,"nodeType":"236","messageId":"237","endLine":22,"endColumn":15},{"ruleId":"234","severity":1,"message":"255","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":26},{"ruleId":"234","severity":1,"message":"251","line":2,"column":18,"nodeType":"236","messageId":"237","endLine":2,"endColumn":25},{"ruleId":"234","severity":1,"message":"239","line":2,"column":40,"nodeType":"236","messageId":"237","endLine":2,"endColumn":46},{"ruleId":"234","severity":1,"message":"271","line":20,"column":10,"nodeType":"236","messageId":"237","endLine":20,"endColumn":17},{"ruleId":"234","severity":1,"message":"272","line":20,"column":19,"nodeType":"236","messageId":"237","endLine":20,"endColumn":29},{"ruleId":"234","severity":1,"message":"273","line":21,"column":10,"nodeType":"236","messageId":"237","endLine":21,"endColumn":19},{"ruleId":"234","severity":1,"message":"274","line":21,"column":21,"nodeType":"236","messageId":"237","endLine":21,"endColumn":29},{"ruleId":"234","severity":1,"message":"270","line":22,"column":8,"nodeType":"236","messageId":"237","endLine":22,"endColumn":15},{"ruleId":"234","severity":1,"message":"275","line":24,"column":9,"nodeType":"236","messageId":"237","endLine":24,"endColumn":13},"no-native-reassign",["276"],"no-negated-in-lhs",["277"],"no-unused-vars","'playerActionsReceived' is defined but never used.","Identifier","unusedVar","'store' is defined but never used.","'Header' is defined but never used.","'Pagination' is assigned a value but never used.","'tableData' is assigned a value but never used.","'filtered' is assigned a value but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'Modal' is defined but never used.","'Drawer' is defined but never used.","'SelectPicker' is defined but never used.","'Alert' is defined but never used.","'gameServer' is defined but never used.","'getMyActions' is defined but never used.","'Content' is defined but never used.","'rand' is assigned a value but never used.","'rand1' is assigned a value but never used.","'Circle' is assigned a value but never used.","'useEffect' is defined but never used.","'Footer' is defined but never used.","'PanelGroup' is defined but never used.","'Panel' is defined but never used.","'Input' is defined but never used.","'List' is defined but never used.","'RadioGroup' is defined but never used.","'Radio' is defined but never used.","'Toggle' is defined but never used.","'ButtonToolbar' is defined but never used.","'ButtonGroup' is defined but never used.","'filter' is assigned a value but never used.","'setFilter' is assigned a value but never used.","'height' is assigned a value but never used.","'width' is assigned a value but never used.","'history' is assigned a value but never used.","'seconds' is assigned a value but never used.","'setSeconds' is assigned a value but never used.","'startBool' is assigned a value but never used.","'setStart' is assigned a value but never used.","'test' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]